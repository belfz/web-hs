
==================== FINAL INTERFACE ====================
2019-06-11 07:49:13.717203 UTC

interface main:Main [family instance module] 8065
  interface hash: 1073bbe6b5457cd09ab81b285f614d1d
  ABI hash: b19c8f3e933416e6823ca8fccf2a3945
  export-list hash: 6e76b201c80ee89960f071e8e5a8f167
  orphan hash: 3070daf9ee7744f64d75f11f3f5add68
  flag hash: 2440eaea0ae1dd4b01ee6bb41c042648
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.allUsers
  Main.bluify
  Main.bluifyRoute
  Main.bob
  Main.emptyRes
  Main.helloRoute
  Main.jenny
  Main.main
  Main.paramRoute
  Main.routes
  Main.userRoute
  Main.usersRoute
  Main.Color{Main.Blue Main.Green Main.Red}
  Main.User{Main.User color name userId}
module dependencies:
package dependencies: aeson-1.4.2.0 appar-0.1.8 array-0.5.3.0
                      async-2.2.1 attoparsec-0.13.2.2 auto-update-0.1.4.1 base-4.12.0.0
                      base-compat-0.10.5 binary-0.8.6.0 blaze-builder-0.4.1.0
                      bsb-http-chunked-0.0.0.4 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 containers-0.6.0.1
                      data-default-class-0.1.2.0 deepseq-1.4.4.0 directory-1.3.3.0
                      dlist-0.8.0.6 exceptions-0.10.2 filepath-1.4.2.1 ghc-boot-th-8.6.5
                      ghc-prim-0.5.3 hashable-1.2.7.0 http-date-0.0.8 http-types-0.12.3
                      http2-1.6.5 integer-gmp-1.0.2.0 integer-logarithms-1.0.3
                      iproute-1.7.7 monad-control-1.0.2.3 mtl-2.2.2 network-2.8.0.1
                      network-byte-order-0.0.0.0 primitive-0.6.4.0 psqueues-0.2.7.1
                      random-1.1 regex-base-0.93.2 regex-compat-0.95.1 regex-posix-0.95.2
                      resourcet-1.2.2 scientific-0.3.6.2 scotty-0.11.4
                      simple-sendfile-0.2.28 stm-2.5.0.0 streaming-commons-0.2.1.0
                      tagged-0.8.6 template-haskell-2.14.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.6.2
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-compat-0.5.1
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vault-0.3.1.2 vector-0.12.0.3 wai-3.2.2 wai-extra-3.0.26
                      warp-3.2.27 word8-0.1.3
orphans: regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         vector-0.12.0.3:Data.Vector.Unboxed
         vector-0.12.0.3:Data.Vector.Fusion.Bundle
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         network-2.8.0.1:Network.Socket stm-2.5.0.0:Control.Monad.STM
         transformers-0.5.6.2:Control.Monad.Trans.Error
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.2.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.6:Data.DList ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         iproute-1.7.7:Data.IP.Addr iproute-1.7.7:Data.IP.Range
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.4:Web.Scotty.Internal.Types tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.3:Data.Vector vector-0.12.0.3:Data.Vector.Primitive
                         vector-0.12.0.3:Data.Vector.Storable
                         vector-0.12.0.3:Data.Vector.Unboxed
                         vector-0.12.0.3:Data.Vector.Unboxed.Base
import  -/  aeson-1.4.2.0:Data.Aeson 1c0f03743e790d215e59b179a5155700
import  -/  aeson-1.4.2.0:Data.Aeson.Types.FromJSON 81e040a9d713fdcda5d873bb8f3a8353
import  -/  aeson-1.4.2.0:Data.Aeson.Types.ToJSON 4322a60d0c69ab6dedcdef7a97590589
import  -/  base-4.12.0.0:Data.Foldable efb37371da929e7bc88d896298d2d979
import  -/  base-4.12.0.0:Data.Monoid 12b87658decc811c5251626260c01aeb
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.Generics 2b3b2e72be66983021f8ad0c2edcf290
import  -/  base-4.12.0.0:GHC.List 4014a3c8a3b7c31c8325f6bcf1feea4a
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.IO c961e5ee6731c0683a6e879272c9e9f6
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  http-types-0.12.3:Network.HTTP.Types.Status 7aaa683563aa01670e5a20ebf1b35176
import  -/  scotty-0.11.4:Web.Scotty 172dafe14ef85e09c4825748db8c6dab
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONColor :: Data.Aeson.Types.FromJSON.FromJSON Main.Color
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Color
                  Main.$fFromJSONColor_$cparseJSON
                  Main.$fFromJSONColor_$cparseJSONList -}
a98415c2e2dc5716139ba2f0c3c68bf6
  $fFromJSONColor1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
8aaac20849ce53dcbfb7a8af122a85f2
  $fFromJSONColor10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Red"#) -}
565502a6ef98d64ad5038dedf4e7d777
  $fFromJSONColor11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Main.$fFromJSONColor16
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONColor12
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
334d599187ff6d8ced15610375f9d209
  $fFromJSONColor12 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarity:+:_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Main.$fFromJSONColor15
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONColor13
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
992c383ee7f7307f77493eb65b55b3f8
  $fFromJSONColor13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarityM1_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Main.$fFromJSONColor14
                     `cast`
                   ((forall (a :: <*>_N).
                     <Data.Aeson.Types.Internal.Options>_R
                     ->_R <Data.Aeson.Types.FromJSON.FromArgs
                             Data.Aeson.Types.Generic.Zero a>_R
                     ->_R <GHC.Base.String>_R
                     ->_R <Data.Aeson.Types.Internal.Object>_R
                     ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.U1
                                      a>_R)) ; Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                                        <Data.Aeson.Types.Generic.Zero>_N
                                                        <GHC.Generics.U1>_N))
                   Main.$fFromJSONColor_$s$fConstructorMetaMetaCons) -}
366f45efe03193bc977baa9ddb2582c6
  $fFromJSONColor14 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success (GHC.Generics.U1 a) f r
       -> f r
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (7, True, True)
                (\ @ a
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a)
                   (contentsFieldName :: GHC.Base.String)
                   (eta :: Data.Aeson.Types.Internal.Object)
                   @ f :: * -> *
                   @ r
                   (eta1 :: Data.Aeson.Types.Internal.JSONPath)
                   (eta2 :: Data.Aeson.Types.Internal.Failure f r)
                   (eta3 :: Data.Aeson.Types.Internal.Success
                              (GHC.Generics.U1 a) f r) ->
                 eta3 (GHC.Generics.U1 @ * @ a)) -}
e0fdc78461546151f614942ad7d54b77
  $fFromJSONColor15 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarityM1_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Main.$fFromJSONColor14
                     `cast`
                   ((forall (a :: <*>_N).
                     <Data.Aeson.Types.Internal.Options>_R
                     ->_R <Data.Aeson.Types.FromJSON.FromArgs
                             Data.Aeson.Types.Generic.Zero a>_R
                     ->_R <GHC.Base.String>_R
                     ->_R <Data.Aeson.Types.Internal.Object>_R
                     ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.U1
                                      a>_R)) ; Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                                        <Data.Aeson.Types.Generic.Zero>_N
                                                        <GHC.Generics.U1>_N))
                   Main.$fFromJSONColor_$s$fConstructorMetaMetaCons1) -}
6f6cdad13f72c5edef60a9973d7f0f38
  $fFromJSONColor16 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Object
    -> Data.Text.Internal.Text
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a))
  {- Arity: 5,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromTaggedObjectarityM1_$cparseFromTaggedObject
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   @ ('GHC.Generics.MetaCons
                        "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   Main.$fFromJSONColor14
                     `cast`
                   ((forall (a :: <*>_N).
                     <Data.Aeson.Types.Internal.Options>_R
                     ->_R <Data.Aeson.Types.FromJSON.FromArgs
                             Data.Aeson.Types.Generic.Zero a>_R
                     ->_R <GHC.Base.String>_R
                     ->_R <Data.Aeson.Types.Internal.Object>_R
                     ->_R Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.U1
                                      a>_R)) ; Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject'[0]
                                                        <Data.Aeson.Types.Generic.Zero>_N
                                                        <GHC.Generics.U1>_N))
                   Main.$fFromJSONColor_$s$fConstructorMetaMetaCons2) -}
4a65bea4f2ea8bc58a6dec42482d3b12
  $fFromJSONColor17 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.C1
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.C1
                                         ('GHC.Generics.MetaCons
                                            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   Main.$fFromJSONColor21
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONColor18
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1>_N))) -}
13da8547f5a8f5fc1bfc922dd41ce5a9
  $fFromJSONColor18 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarity:+:_$cparsePair
                   @ Data.Aeson.Types.Generic.Zero
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   Main.$fFromJSONColor20
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))
                   Main.$fFromJSONColor19
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1>_N))) -}
ce4ececf25d1a11df18d980610762d49
  $fFromJSONColor19 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarityM1_$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Main.$fFromJSONColor_$s$fConstructorMetaMetaCons
                   (Data.Aeson.Types.FromJSON.$fGFromJSONarityU1_$cgParseJSON
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   (Data.Aeson.Types.FromJSON.$fGFromJSONarityU1_$cgParseJSON
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))) -}
7df9aba58bb7f611a43573fba2083fcd
  $fFromJSONColor2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
906863b2d78829f05fd459d6b6a2d710
  $fFromJSONColor20 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarityM1_$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Main.$fFromJSONColor_$s$fConstructorMetaMetaCons1
                   (Data.Aeson.Types.FromJSON.$fGFromJSONarityU1_$cgParseJSON
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   (Data.Aeson.Types.FromJSON.$fGFromJSONarityU1_$cgParseJSON
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))) -}
60087d297046e887d24c0c747f599c30
  $fFromJSONColor21 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Pair
    -> GHC.Maybe.Maybe
         (Data.Aeson.Types.Internal.Parser
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
               a1))
  {- Arity: 3,
     Unfolding: (Data.Aeson.Types.FromJSON.$fFromPairarityM1_$cparsePair
                   @ ('GHC.Generics.MetaCons
                        "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.U1
                   Main.$fFromJSONColor_$s$fConstructorMetaMetaCons2
                   (Data.Aeson.Types.FromJSON.$fGFromJSONarityU1_$cgParseJSON
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))
                   (Data.Aeson.Types.FromJSON.$fGFromJSONarityU1_$cgParseJSON
                      @ Data.Aeson.Types.Generic.Zero)
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON[0]
                             <Data.Aeson.Types.Generic.Zero>_N <GHC.Generics.U1>_N))) -}
69e42bf815a186da473a6dc62c4baf10
  $fFromJSONColor22 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Text.Internal.Text
    -> GHC.Maybe.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 2,
     Strictness: <S(LC(S)LLLLL),1*U(A,C(U),A,A,A,A,A)><S(SSS),1*U(U,U,U)>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (key2 :: Data.Text.Internal.Text)[OneShot] ->
                 case opts of ww { Data.Aeson.Types.Internal.Options ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 case key2 of ww8 { Data.Text.Internal.Text ww9 ww10 ww11 ->
                 case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                        @ *
                        @ ('GHC.Generics.MetaCons
                             "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Main.$fFromJSONColor_$s$fConstructorMetaMetaCons2
                        @ a1
                        ww2
                        ww9
                        ww10
                        ww11 of wild {
                   GHC.Maybe.Nothing
                   -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                             @ *
                             @ ('GHC.Generics.MetaCons
                                  "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             Main.$fFromJSONColor_$s$fConstructorMetaMetaCons1
                             @ a1
                             ww2
                             ww9
                             ww10
                             ww11 of wild1 {
                        GHC.Maybe.Nothing
                        -> case Data.Aeson.Types.FromJSON.$w$cparseSumFromString
                                  @ *
                                  @ ('GHC.Generics.MetaCons
                                       "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  Main.$fFromJSONColor_$s$fConstructorMetaMetaCons
                                  @ a1
                                  ww2
                                  ww9
                                  ww10
                                  ww11 of wild2 {
                             GHC.Maybe.Nothing
                             -> GHC.Maybe.Nothing
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Blue"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       a1)
                             GHC.Maybe.Just a2
                             -> GHC.Maybe.Just
                                  @ ((GHC.Generics.:+:)
                                       (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                       (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Blue"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                       a1)
                                  (GHC.Generics.R1
                                     @ *
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Blue"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                     @ a1
                                     (GHC.Generics.R1
                                        @ *
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ (GHC.Generics.M1
                                             GHC.Generics.C
                                             ('GHC.Generics.MetaCons
                                                "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1)
                                        @ a1
                                        a2)) }
                        GHC.Maybe.Just a2
                        -> GHC.Maybe.Just
                             @ ((GHC.Generics.:+:)
                                  (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Blue"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                  a1)
                             (GHC.Generics.R1
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1)
                                @ (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "Blue"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)
                                @ a1
                                (GHC.Generics.L1
                                   @ *
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ (GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1)
                                   @ a1
                                   a2)) }
                   GHC.Maybe.Just a2
                   -> GHC.Maybe.Just
                        @ ((GHC.Generics.:+:)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)
                             a1)
                        (GHC.Generics.L1
                           @ *
                           @ (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                           @ (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)
                           @ a1
                           a2) } } }) -}
17c91d060824dbeedf431ae4bcee102d
  $fFromJSONColor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
d6befebb3c5e2f1fb1d66a6cf0083249
  $fFromJSONColor4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
            a1)
  {- Arity: 3, Strictness: <L,U(A,C(U),A,A,A,A,A)><L,A><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)[OneShot]
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)[OneShot]
                   (value :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1
                             a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Main.$fFromJSONColor_$s$fConstructorMetaMetaCons2
                       @ a1
                       opts
                       value
                 } in
                 let {
                   m1 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Main.$fFromJSONColor_$s$fConstructorMetaMetaCons1
                       @ a1
                       opts
                       value
                 } in
                 let {
                   m2 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1)
                   = Data.Aeson.Types.FromJSON.$w$cparseUntaggedValue
                       @ ('GHC.Generics.MetaCons
                            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                       @ Data.Aeson.Types.Generic.Zero
                       Main.$fFromJSONColor_$s$fConstructorMetaMetaCons
                       @ a1
                       opts
                       value
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:+:)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Blue"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                a1)
                             f4
                             r) ->
                  let {
                    lvl207 :: f4 r
                    = let {
                        lvl31 :: f4 r
                        = m2
                            `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.C
                                  ('GHC.Generics.MetaCons
                                     "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                  a1>_R)
                            @ f4
                            @ r
                            path
                            kf
                            (\ (a2 :: GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                        GHC.Generics.U1
                                        a1) ->
                             ks
                               (GHC.Generics.R1
                                  @ *
                                  @ (GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1)
                                  @ (GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "Blue"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1)
                                  @ a1
                                  (GHC.Generics.R1
                                     @ *
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ (GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1)
                                     @ a1
                                     a2)))
                      } in
                      m1
                        `cast`
                      (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1
                              a1>_R)
                        @ f4
                        @ r
                        path
                        (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                           (ds1 :: GHC.Base.String) ->
                         lvl31)
                        (\ (a2 :: GHC.Generics.M1
                                    GHC.Generics.C
                                    ('GHC.Generics.MetaCons
                                       "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                    GHC.Generics.U1
                                    a1) ->
                         ks
                           (GHC.Generics.R1
                              @ *
                              @ (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                              @ (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Blue"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                              @ a1
                              (GHC.Generics.L1
                                 @ *
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ (GHC.Generics.M1
                                      GHC.Generics.C
                                      ('GHC.Generics.MetaCons
                                         "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                      GHC.Generics.U1)
                                 @ a1
                                 a2)))
                  } in
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1
                          a1>_R)
                    @ f4
                    @ r
                    path
                    (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                       (ds1 :: GHC.Base.String) ->
                     lvl207)
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                                a1) ->
                     ks
                       (GHC.Generics.L1
                          @ *
                          @ (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                          @ (GHC.Generics.C1
                               ('GHC.Generics.MetaCons
                                  "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1
                             GHC.Generics.:+: GHC.Generics.C1
                                                ('GHC.Generics.MetaCons
                                                   "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                GHC.Generics.U1)
                          @ a1
                          a2)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:+:)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1)
                              (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1)
                              a1>_R))) -}
123e1066e6e4de708e959f069a3a5ed4
  $fFromJSONColor5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fFromJSONColor6) -}
794447d6705d06265873c3d53bbbef9f
  $fFromJSONColor6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Blue"#) -}
2216eb2055b2ebd9da234b49b4cb58b6
  $fFromJSONColor7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fFromJSONColor8) -}
155504733de26a9c81cd531d1d77c91a
  $fFromJSONColor8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Green"#) -}
e80e45d84912986f608023f70c9de492
  $fFromJSONColor9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Main.$fFromJSONColor10) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONColor_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.Color
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Tagged.Tagged
                          Data.Aeson.Types.Generic.True
                          (Data.Aeson.Types.Internal.Parser
                             ((GHC.Generics.:+:)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Blue"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                GHC.Types.Any))
                   = Main.$fFromJSONColor_g x
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success Main.Color f5 r) ->
                  m `cast`
                  (Data.Tagged.N:Tagged[0]
                       <*>_N
                       <Data.Aeson.Types.Generic.True>_P
                       <Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:+:)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1)
                             (GHC.Generics.C1
                                ('GHC.Generics.MetaCons
                                   "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: GHC.Generics.C1
                                                 ('GHC.Generics.MetaCons
                                                    "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                 GHC.Generics.U1)
                             GHC.Types.Any)>_R ; Data.Aeson.Types.Internal.N:Parser[0]
                                                     <(GHC.Generics.:+:)
                                                        (GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Red"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1)
                                                        (GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Green"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1
                                                         GHC.Generics.:+: GHC.Generics.C1
                                                                            ('GHC.Generics.MetaCons
                                                                               "Blue"
                                                                               'GHC.Generics.PrefixI
                                                                               'GHC.Types.False)
                                                                            GHC.Generics.U1)
                                                        GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:+:)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
                                (GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1
                                 GHC.Generics.:+: GHC.Generics.C1
                                                    ('GHC.Generics.MetaCons
                                                       "Blue"
                                                       'GHC.Generics.PrefixI
                                                       'GHC.Types.False)
                                                    GHC.Generics.U1)
                                GHC.Types.Any) ->
                     ks
                       (Main.$fFromJSONColor_$cto
                          @ GHC.Types.Any
                          a2
                            `cast`
                          (Sym (GHC.Generics.N:M1[0]
                                    <*>_N
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Color" "Main" "main" 'GHC.Types.False>_P
                                    <GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: (GHC.Generics.C1
                                                         ('GHC.Generics.MetaCons
                                                            "Green"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1
                                                       GHC.Generics.:+: GHC.Generics.C1
                                                                          ('GHC.Generics.MetaCons
                                                                             "Blue"
                                                                             'GHC.Generics.PrefixI
                                                                             'GHC.Types.False)
                                                                          GHC.Generics.U1)>_R) <GHC.Types.Any>_N ; Nth:2
                                                                                                                       (Nth:2
                                                                                                                            (Nth:3
                                                                                                                                 (Nth:3
                                                                                                                                      (Inst (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                            <GHC.Generics.M1
                                                                                                                                                               GHC.Generics.D
                                                                                                                                                               ('GHC.Generics.MetaData
                                                                                                                                                                  "Color"
                                                                                                                                                                  "Main"
                                                                                                                                                                  "main"
                                                                                                                                                                  'GHC.Types.False)
                                                                                                                                                               (GHC.Generics.C1
                                                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                                                     "Red"
                                                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                                                     'GHC.Types.False)
                                                                                                                                                                  GHC.Generics.U1
                                                                                                                                                                GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                                                                                    ('GHC.Generics.MetaCons
                                                                                                                                                                                       "Green"
                                                                                                                                                                                       'GHC.Generics.PrefixI
                                                                                                                                                                                       'GHC.Types.False)
                                                                                                                                                                                    GHC.Generics.U1
                                                                                                                                                                                  GHC.Generics.:+: GHC.Generics.C1
                                                                                                                                                                                                     ('GHC.Generics.MetaCons
                                                                                                                                                                                                        "Blue"
                                                                                                                                                                                                        'GHC.Generics.PrefixI
                                                                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                                                                     GHC.Generics.U1))
                                                                                                                                                               GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                        (Nth:3
                                                                                                                                                                                             (Nth:3
                                                                                                                                                                                                  (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                   ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                           Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                           GHC.Types.Any>_R
                                                                                                                                                                                                   ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                   ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                           (Sub (Sym (Main.Rep_Color[0])) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                         <GHC.Generics.Rep
                                                                                                                                                                                                                                                                            Main.Color
                                                                                                                                                                                                                                                                            GHC.Types.Any>_R)) (Coh <f5>_N
                                                                                                                                                                                                                                                                                                    (Nth:0
                                                                                                                                                                                                                                                                                                         (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                   <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                      Main.Color
                                                                                                                                                                                                                                                                                                                      GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                               (Nth:3
                                                                                                                                                                                                                                                                                                                                                    (Nth:3
                                                                                                                                                                                                                                                                                                                                                         (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                          ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                                                                  Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                                                                  GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                                                                          ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                                                                          ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                                                                  (Sub (Main.Rep_Color[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                          <GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                             GHC.Generics.D
                                                                                                                                                                                                                                                                                                                                                                                                                             ('GHC.Generics.MetaData
                                                                                                                                                                                                                                                                                                                                                                                                                                "Color"
                                                                                                                                                                                                                                                                                                                                                                                                                                "Main"
                                                                                                                                                                                                                                                                                                                                                                                                                                "main"
                                                                                                                                                                                                                                                                                                                                                                                                                                'GHC.Types.False)
                                                                                                                                                                                                                                                                                                                                                                                                                             (GHC.Generics.C1
                                                                                                                                                                                                                                                                                                                                                                                                                                ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                                                                                                                                                                                   "Red"
                                                                                                                                                                                                                                                                                                                                                                                                                                   'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                   'GHC.Types.False)
                                                                                                                                                                                                                                                                                                                                                                                                                                GHC.Generics.U1
                                                                                                                                                                                                                                                                                                                                                                                                                              GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                                                                                                                                                                                                                                                                                                                                                  ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                                                                                                                                                                                                     "Green"
                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Types.False)
                                                                                                                                                                                                                                                                                                                                                                                                                                                  GHC.Generics.U1
                                                                                                                                                                                                                                                                                                                                                                                                                                                GHC.Generics.:+: GHC.Generics.C1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "Blue"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      'GHC.Types.False)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Generics.U1))
                                                                                                                                                                                                                                                                                                                                                                                                                             GHC.Types.Any>_R))))) (Coh <r>_N
                                                                                                                                                                                                                                                                                                                                                                                                                                                        (Nth:0
                                                                                                                                                                                                                                                                                                                                                                                                                                                             (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Main.Color
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              (Nth:3
ata.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ->_R <Data.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (Main.Rep_Color[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
olor"
ain"
main"
ypes.False)
enerics.C1
enerics.MetaCons
ed"
enerics.PrefixI
ypes.False)
enerics.U1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        GHC.Generics.:+: (GHC.Generics.C1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ('GHC.Generics.MetaCons
reen"
enerics.PrefixI
ypes.False)
enerics.U1
enerics.:+: GHC.Generics.C1
enerics.MetaCons
lue"
enerics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                'GHC.Types.False)
enerics.U1))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       GHC.Types.Any>_R)) (Sym (Coh <f5>_N
th:0
ym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Main.Color
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GHC.Types.Any>_R) ; (Nth:3
th:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (Nth:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (Main.Rep_Color[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
olor"
ain"
main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                'GHC.Types.False)
enerics.C1
enerics.MetaCons
ed"
enerics.PrefixI
ypes.False)
enerics.U1
enerics.:+: (GHC.Generics.C1
enerics.MetaCons
reen"
enerics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     'GHC.Types.False)
enerics.U1
enerics.:+: GHC.Generics.C1
enerics.MetaCons
lue"
enerics.PrefixI
ypes.False)
enerics.U1))
ypes.Any>_R))))))))))))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Main.Color>_R))) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONColor_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.Color]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Main.$fFromJSONColor3
                            (GHC.CString.unpackAppendCString#
                               Main.$fFromJSONColor2
                               (GHC.CString.unpackAppendCString#
                                  Main.$fFromJSONColor1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success [Main.Color] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[Main.Color]>_R))
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Main.$fFromJSONColor_go 0# ($wgo 0#) } }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONColor_$cto :: GHC.Generics.Rep Main.Color x -> Main.Color
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.Color x) ->
                 case ds
                        `cast`
                      ((Sub (Main.Rep_Color[0]) ; GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.D>_P
                                                      <'GHC.Generics.MetaData
                                                         "Color" "Main" "main" 'GHC.Types.False>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "Red"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.False)
                                                         GHC.Generics.U1
                                                       GHC.Generics.:+: (GHC.Generics.M1
                                                                           GHC.Generics.C
                                                                           ('GHC.Generics.MetaCons
                                                                              "Green"
                                                                              'GHC.Generics.PrefixI
                                                                              'GHC.Types.False)
                                                                           GHC.Generics.U1
                                                                         GHC.Generics.:+: GHC.Generics.M1
                                                                                            GHC.Generics.C
                                                                                            ('GHC.Generics.MetaCons
                                                                                               "Blue"
                                                                                               'GHC.Generics.PrefixI
                                                                                               'GHC.Types.False)
                                                                                            GHC.Generics.U1)>_R) <x>_N) of wild {
                   GHC.Generics.L1 ds1
                   -> case ds1
                             `cast`
                           (GHC.Generics.N:M1[0]
                                <*>_N
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                <GHC.Generics.U1>_R <x>_N) of wild1 { GHC.Generics.U1 ->
                      Main.Red }
                   GHC.Generics.R1 ds1
                   -> case ds1 of wild1 {
                        GHC.Generics.L1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Green" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.U1>_R <x>_N) of wild2 { GHC.Generics.U1 ->
                           Main.Green }
                        GHC.Generics.R1 ds2
                        -> case ds2
                                  `cast`
                                (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                                     <GHC.Generics.U1>_R <x>_N) of wild2 { GHC.Generics.U1 ->
                           Main.Blue } } }) -}
0be00d5c13787008bb764ee4ed6dc41b
  $fFromJSONColor_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   Main.$fFromJSONColor5)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   case GHC.Generics.$WSPrefix
                          `cast`
                        (GHC.Generics.D:R:SingFixityIa0[0] <'GHC.Generics.PrefixI>_N) of wild { GHC.Generics.SPrefix co ->
                   GHC.Generics.Prefix
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepFixityI[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f1 :: <k
                                                                                -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaCons
                         "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepFixityI[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   case GHC.Generics.$WSFalse
                          `cast`
                        (GHC.Generics.D:R:SingBoola0[0] <'GHC.Types.False>_N) of wild { GHC.Generics.SFalse co ->
                   GHC.Types.False
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepBool[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f1 :: <k
                                                                                -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaCons
                         "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepBool[0])) -}
1c68e61c916573ec905eb544b2de9f34
  $fFromJSONColor_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Green" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   Main.$fFromJSONColor7)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Green" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   case GHC.Generics.$WSPrefix
                          `cast`
                        (GHC.Generics.D:R:SingFixityIa0[0] <'GHC.Generics.PrefixI>_N) of wild { GHC.Generics.SPrefix co ->
                   GHC.Generics.Prefix
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepFixityI[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f1 :: <k
                                                                                -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaCons
                         "Green" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepFixityI[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Green" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   case GHC.Generics.$WSFalse
                          `cast`
                        (GHC.Generics.D:R:SingBoola0[0] <'GHC.Types.False>_N) of wild { GHC.Generics.SFalse co ->
                   GHC.Types.False
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepBool[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f1 :: <k
                                                                                -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaCons
                         "Green" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepBool[0])) -}
8cf8335e07e5912bed309516403b4ab2
  $fFromJSONColor_$s$fConstructorMetaMetaCons2 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Red" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   Main.$fFromJSONColor9)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Red" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   case GHC.Generics.$WSPrefix
                          `cast`
                        (GHC.Generics.D:R:SingFixityIa0[0] <'GHC.Generics.PrefixI>_N) of wild { GHC.Generics.SPrefix co ->
                   GHC.Generics.Prefix
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepFixityI[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f1 :: <k
                                                                                -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaCons
                         "Red" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepFixityI[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f1 :: k -> *
                     @ a :: k
                     (ds :: t ('GHC.Generics.MetaCons
                                 "Red" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a) ->
                   case GHC.Generics.$WSFalse
                          `cast`
                        (GHC.Generics.D:R:SingBoola0[0] <'GHC.Types.False>_N) of wild { GHC.Generics.SFalse co ->
                   GHC.Types.False
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepBool[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f1 :: <k
                                                                                -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaCons
                         "Red" 'GHC.Generics.PrefixI 'GHC.Types.False) f1 a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepBool[0])) -}
08eb7e083c0fcdd1d1307528352f34f8
  $fFromJSONColor_g ::
    Data.Aeson.Types.Internal.Value
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:+:)
               (GHC.Generics.M1
                  GHC.Generics.C
                  ('GHC.Generics.MetaCons
                     "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1)
               (GHC.Generics.C1
                  ('GHC.Generics.MetaCons
                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  GHC.Generics.U1
                GHC.Generics.:+: GHC.Generics.C1
                                   ('GHC.Generics.MetaCons
                                      "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                   GHC.Generics.U1)
               GHC.Types.Any))
  {- Unfolding: (Data.Aeson.Types.FromJSON.$fParseSumTYPEarityfTrue_$cparseSum
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: (GHC.Generics.C1
                                          ('GHC.Generics.MetaCons
                                             "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                          GHC.Generics.U1
                                        GHC.Generics.:+: GHC.Generics.C1
                                                           ('GHC.Generics.MetaCons
                                                              "Blue"
                                                              'GHC.Generics.PrefixI
                                                              'GHC.Types.False)
                                                           GHC.Generics.U1))
                   @ Data.Aeson.Types.Generic.Zero
                   Main.$fFromJSONColor22
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:SumFromString[0]
                             <*>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Blue"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Main.$fFromJSONColor17
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromPair[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Blue"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Main.$fFromJSONColor11
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromTaggedObject[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Blue"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   Main.$fFromJSONColor4
                     `cast`
                   (Sym (Data.Aeson.Types.FromJSON.N:FromUntaggedValue[0]
                             <Data.Aeson.Types.Generic.Zero>_N
                             <GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                GHC.Generics.U1
                              GHC.Generics.:+: (GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1
                                                GHC.Generics.:+: GHC.Generics.C1
                                                                   ('GHC.Generics.MetaCons
                                                                      "Blue"
                                                                      'GHC.Generics.PrefixI
                                                                      'GHC.Types.False)
                                                                   GHC.Generics.U1)>_N))
                   @ GHC.Types.Any
                   Data.Aeson.Types.Internal.defaultOptions
                   (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONColor_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [Main.Color]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONUser :: Data.Aeson.Types.FromJSON.FromJSON Main.User
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fFromJSONUser_$cparseJSON
                  Main.$fFromJSONUser_$cparseJSONList -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONUser1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser
         ((GHC.Generics.:*:)
            (GHC.Generics.M1
               GHC.Generics.S
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "userId")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Types.Int))
            (GHC.Generics.S1
               ('GHC.Generics.MetaSel
                  ('GHC.Maybe.Just "name")
                  'GHC.Generics.NoSourceUnpackedness
                  'GHC.Generics.NoSourceStrictness
                  'GHC.Generics.DecidedLazy)
               (GHC.Generics.Rec0 GHC.Base.String)
             GHC.Generics.:*: GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "color")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Main.Color))
            a1)
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (obj :: Data.Aeson.Types.Internal.Object) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                             a1)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "userId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                       Main.$fFromJSONUser_$s$fSelectorMetaMetaSel2
                       Main.$fFromJSONUser8
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                       @ a1
                       opts
                       fargs
                       obj
                 } in
                 let {
                   m1 :: Data.Aeson.Types.Internal.Parser
                           (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "name")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.Rec0 GHC.Base.String)
                              a1)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "name")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       Main.$fFromJSONUser_$s$fSelectorMetaMetaSel1
                       Main.$fFromJSONUser5
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                       @ a1
                       opts
                       fargs
                       obj
                 } in
                 let {
                   e :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "color")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 Main.Color)
                             a1)
                   = Data.Aeson.Types.FromJSON.$fFromRecordarityM11_$cparseRecord
                       @ ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "color")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                       @ Data.Aeson.Types.Generic.Zero
                       @ (GHC.Generics.K1 GHC.Generics.R Main.Color)
                       Main.$fFromJSONUser_$s$fSelectorMetaMetaSel
                       Main.$fFromJSONUser2
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.K1 GHC.Generics.R Main.Color>_N))
                       @ a1
                       opts
                       fargs
                       obj
                 } in
                 (\ @ f4 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             ((GHC.Generics.:*:)
                                (GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "color")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Main.Color))
                                a1)
                             f4
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Maybe.Just "userId")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 GHC.Types.Int)
                          a1>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                                a1) ->
                     m1
                       `cast`
                     (Data.Aeson.Types.Internal.N:Parser[0]
                          <GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a1>_R)
                       @ f4
                       @ r
                       path
                       kf
                       (\ (a4 :: GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a1) ->
                        e `cast`
                        (Data.Aeson.Types.Internal.N:Parser[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "color")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 Main.Color)
                                a1>_R)
                          @ f4
                          @ r
                          path
                          kf
                          (\ (a3 :: GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Maybe.Just "color")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 Main.Color)
                                      a1) ->
                           ks
                             (GHC.Generics.:*:
                                @ *
                                @ (GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "userId")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int))
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Maybe.Just "name")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Maybe.Just "color")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 Main.Color))
                                @ a1
                                a2
                                (GHC.Generics.:*:
                                   @ *
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "name")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "color")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 Main.Color))
                                   @ a1
                                   a4
                                   a3))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <(GHC.Generics.:*:)
                              (GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "userId")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Types.Int))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Maybe.Just "name")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Maybe.Just "color")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 Main.Color))
                              a1>_R))) -}
341f61678e660cb34a41a59be26b542e
  $fFromJSONUser10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("userId"#) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONUser2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R Main.Color a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ Main.Color
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Main.$fFromJSONColor
                   @ a1
                   w3) -}
10adb11d3b291b6843fae538167dcbc8
  $fFromJSONUser3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fFromJSONUser4) -}
1be7791145afb8d762ff6376f41682fd
  $fFromJSONUser4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("color"#) -}
346d7a09a814489d727e6720798b6d25
  $fFromJSONUser5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Main.$fFromJSONUser_$s$fFromJSON[]
                   @ a1
                   w3) -}
f6d927b7b6c5e2f3efce85966829aff8
  $fFromJSONUser6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fFromJSONUser7) -}
31037693e6b5e2b6661f565ec1903521
  $fFromJSONUser7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("name"#) -}
76c31f3aee26e752d66489916f683586
  $fFromJSONUser8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Types.Int
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInt
                   @ a1
                   w3) -}
d16a73ae42f5ddb4c74de81831247c0c
  $fFromJSONUser9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$fFromJSONUser10) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONUser_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.User
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Maybe.Just "name")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Maybe.Just "color")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 Main.Color))
                             GHC.Types.Any)
                   = case x of wild {
                       DEFAULT
                       -> let {
                            msg20 :: GHC.Base.String
                            = GHC.CString.unpackAppendCString#
                                Data.Aeson.Types.FromJSON.typeMismatch4
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                   (GHC.CString.unpackAppendCString#
                                      Data.Aeson.Types.FromJSON.typeMismatch3
                                      (case wild of wild1 {
                                         Data.Aeson.Types.Internal.Array ds
                                         -> Data.Aeson.Types.FromJSON.typeMismatch1
                                         Data.Aeson.Types.Internal.String ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                         Data.Aeson.Types.Internal.Number ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                         Data.Aeson.Types.Internal.Bool ds
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                         Data.Aeson.Types.Internal.Null
                                         -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                          } in
                          (\ @ f4 :: * -> *
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f4 r)[OneShot]
                             (_ks :: Data.Aeson.Types.Internal.Success
                                       ((GHC.Generics.:*:)
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "userId")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Types.Int))
                                          (GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Maybe.Just "name")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String)
                                           GHC.Generics.:*: GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Maybe.Just "color")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 Main.Color))
                                          GHC.Types.Any)
                                       f4
                                       r)[OneShot] ->
                           kf
                             (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                             msg20)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "userId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "name")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Maybe.Just "color")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 Main.Color))
                                       GHC.Types.Any>_R))
                       Data.Aeson.Types.Internal.Object obj
                       -> Main.$fFromJSONUser1
                            @ GHC.Types.Any
                            Main.$fFromJSONUser_opts
                            (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Types.Any)
                            obj }
                 } in
                 (\ @ f5 :: * -> *
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f5 r)
                    (ks :: Data.Aeson.Types.Internal.Success Main.User f5 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Maybe.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Maybe.Just "color")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 Main.Color))
                          GHC.Types.Any>_R)
                    @ f5
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Maybe.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Maybe.Just "color")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 Main.Color))
                                GHC.Types.Any) ->
                     ks
                       (Main.$fFromJSONUser_$cto
                          @ GHC.Types.Any
                          a2
                            `cast`
                          ((Sym (GHC.Generics.N:M1[0]
                                     <*>_N
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "User" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.S1
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "userId")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Types.Int)
                                      GHC.Generics.:*: (GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "name")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.S1
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "color")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.Rec0
                                                                              Main.Color))>_R) ; Sym (GHC.Generics.N:M1[0]
                                                                                                          <*>_N
                                                                                                          <GHC.Generics.D>_P
                                                                                                          <'GHC.Generics.MetaData
                                                                                                             "User"
                                                                                                             "Main"
                                                                                                             "main"
                                                                                                             'GHC.Types.False>_P
                                                                                                          <GHC.Generics.M1
                                                                                                             GHC.Generics.C
                                                                                                             ('GHC.Generics.MetaCons
                                                                                                                "User"
                                                                                                                'GHC.Generics.PrefixI
                                                                                                                'GHC.Types.True)
                                                                                                             (GHC.Generics.S1
                                                                                                                ('GHC.Generics.MetaSel
                                                                                                                   ('GHC.Maybe.Just
                                                                                                                      "userId")
                                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                (GHC.Generics.Rec0
                                                                                                                   GHC.Types.Int)
                                                                                                              GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                        "name")
                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                  (GHC.Generics.Rec0
                                                                                                                                     GHC.Base.String)
                                                                                                                                GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                   ('GHC.Generics.MetaSel
                                                                                                                                                      ('GHC.Maybe.Just
                                                                                                                                                         "color")
                                                                                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                                                                                      'GHC.Generics.DecidedLazy)
                                                                                                                                                   (GHC.Generics.Rec0
                                                                                                                                                      Main.Color)))>_R)) <GHC.Types.Any>_N ; Nth:2
                                                                                                                                                                                                 (Nth:2
                                                                                                                                                                                                      (Nth:3
                                                                                                                                                                                                           (Nth:3
                                                                                                                                                                                                                (Inst (Inst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                      <GHC.Generics.M1
                                                                                                                                                                                                                                         GHC.Generics.D
                                                                                                                                                                                                                                         ('GHC.Generics.MetaData
                                                                                                                                                                                                                                            "User"
                                                                                                                                                                                                                                            "Main"
                                                                                                                                                                                                                                            "main"
                                                                                                                                                                                                                                            'GHC.Types.False)
                                                                                                                                                                                                                                         (GHC.Generics.M1
                                                                                                                                                                                                                                            GHC.Generics.C
                                                                                                                                                                                                                                            ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                               "User"
                                                                                                                                                                                                                                               'GHC.Generics.PrefixI
                                                                                                                                                                                                                                               'GHC.Types.True)
                                                                                                                                                                                                                                            (GHC.Generics.S1
                                                                                                                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                  ('GHC.Maybe.Just
                                                                                                                                                                                                                                                     "userId")
                                                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                               (GHC.Generics.Rec0
                                                                                                                                                                                                                                                  GHC.Types.Int)
                                                                                                                                                                                                                                             GHC.Generics.:*: (GHC.Generics.S1
                                                                                                                                                                                                                                                                 ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                    ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                       "name")
                                                                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                 (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                    GHC.Base.String)
                                                                                                                                                                                                                                                               GHC.Generics.:*: GHC.Generics.S1
                                                                                                                                                                                                                                                                                  ('GHC.Generics.MetaSel
                                                                                                                                                                                                                                                                                     ('GHC.Maybe.Just
                                                                                                                                                                                                                                                                                        "color")
                                                                                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness
                                                                                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                                                                                                  (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                     Main.Color))))
                                                                                                                                                                                                                                         GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                  (Nth:3
                                                                                                                                                                                                                                                                       (Nth:3
                                                                                                                                                                                                                                                                            (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                             ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                     Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                     GHC.Types.Any>_R
                                                                                                                                                                                                                                                                             ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                             ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                     (Sub (Sym (Main.Rep_User[0])) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                  <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                     Main.User
                                                                                                                                                                                                                                                                                                                                                     GHC.Types.Any>_R)) (Coh <f5>_N
                                                                                                                                                                                                                                                                                                                                                                             (Nth:0
                                                                                                                                                                                                                                                                                                                                                                                  (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                            <GHC.Generics.Rep
                                                                                                                                                                                                                                                                                                                                                                                               Main.User
                                                                                                                                                                                                                                                                                                                                                                                               GHC.Types.Any>_R) ; (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                        (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                             (Nth:3
                                                                                                                                                                                                                                                                                                                                                                                                                                  (<Data.Aeson.Types.Internal.Options>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                   ->_R <Data.Aeson.Types.FromJSON.FromArgs
                                                                                                                                                                                                                                                                                                                                                                                                                                           Data.Aeson.Types.Generic.Zero
                                                                                                                                                                                                                                                                                                                                                                                                                                           GHC.Types.Any>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                   ->_R <Data.Aeson.Types.Internal.Value>_R
                                                                                                                                                                                                                                                                                                                                                                                                                                   ->_R (Data.Aeson.Types.Internal.Parser
                                                                                                                                                                                                                                                                                                                                                                                                                                           (Sub (Main.Rep_User[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  <GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GHC.Generics.D
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ('GHC.Generics.MetaData
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "User"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "Main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "main"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        'GHC.Types.False)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     (GHC.Generics.M1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        GHC.Generics.C
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ('GHC.Generics.MetaCons
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           "User"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           'GHC.Generics.PrefixI
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           'GHC.Types.True)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        (GHC.Generics.S1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ('GHC.Generics.MetaSel
aybe.Just
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 "userId")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (GHC.Generics.Rec0
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              GHC.Types.Int)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         GHC.Generics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
name")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ase.String)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ('GHC.Maybe.Just
color")
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ain.Color))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     GHC.Types.Any>_R))))) (Coh <r>_N
th:0
nst (Sym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
ain.User
ypes.Any>_R) ; (Nth:3
th:3
th:3
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           (<Data.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (Main.Rep_User[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
ser"
ain"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "User"
enerics.PrefixI
ypes.True)
enerics.S1
enerics.MetaSel
aybe.Just
userId")
enerics.NoSourceUnpackedness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ypes.Int)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "name")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ase.String)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ('GHC.Maybe.Just
color")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'GHC.Generics.DecidedLazy)
enerics.Rec0
ain.Color))))
ypes.Any>_R)) (Sym (Coh <f5>_N
th:0
ym (Data.Aeson.Types.Internal.N:Parser[0]
enerics.Rep
ain.User
ypes.Any>_R) ; (Nth:3
th:3
th:3
ata.Aeson.Types.Internal.Options>_R
ata.Aeson.Types.FromJSON.FromArgs
ata.Aeson.Types.Generic.Zero
ypes.Any>_R
ata.Aeson.Types.Internal.Value>_R
ata.Aeson.Types.Internal.Parser
ub (Main.Rep_User[0]) <GHC.Types.Any>_N))_R))) ; Data.Aeson.Types.Internal.N:Parser[0]
enerics.M1
enerics.D
enerics.MetaData
ser"
ain"
main"
ypes.False)
enerics.M1
enerics.C
enerics.MetaCons
ser"
enerics.PrefixI
ypes.True)
enerics.S1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ('GHC.Generics.MetaSel
aybe.Just
userId")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         (GHC.Generics.Rec0
ypes.Int)
enerics.:*: (GHC.Generics.S1
enerics.MetaSel
aybe.Just
name")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ase.String)
enerics.:*: GHC.Generics.S1
enerics.MetaSel
aybe.Just
color")
enerics.NoSourceUnpackedness
enerics.NoSourceStrictness
enerics.DecidedLazy)
enerics.Rec0
ain.Color))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   GHC.Types.Any>_R))))))))))))))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Main.User>_R))) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONUser_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.User]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg20 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Main.$fFromJSONColor3
                            (GHC.CString.unpackAppendCString#
                               Main.$fFromJSONColor2
                               (GHC.CString.unpackAppendCString#
                                  Main.$fFromJSONColor1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success [Main.User] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg20)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0] <[Main.User]>_R))
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.>=# ww dt1 of lwild {
                            DEFAULT
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            1# -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Main.$fFromJSONUser_go 0# ($wgo 0#) } }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONUser_$cto :: GHC.Generics.Rep Main.User x -> Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Main.User x) ->
                 case ds
                        `cast`
                      ((Sub (Main.Rep_User[0]) ; (GHC.Generics.N:M1[0]
                                                      <*>_N
                                                      <GHC.Generics.D>_P
                                                      <'GHC.Generics.MetaData
                                                         "User" "Main" "main" 'GHC.Types.False>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.C
                                                         ('GHC.Generics.MetaCons
                                                            "User"
                                                            'GHC.Generics.PrefixI
                                                            'GHC.Types.True)
                                                         (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Maybe.Just "userId")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int)
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Maybe.Just
                                                                                    "name")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Base.String)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Maybe.Just
                                                                                                     "color")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  Main.Color)))>_R ; GHC.Generics.N:M1[0]
                                                                                                                         <*>_N
                                                                                                                         <GHC.Generics.C>_P
                                                                                                                         <'GHC.Generics.MetaCons
                                                                                                                            "User"
                                                                                                                            'GHC.Generics.PrefixI
                                                                                                                            'GHC.Types.True>_P
                                                                                                                         <GHC.Generics.M1
                                                                                                                            GHC.Generics.S
                                                                                                                            ('GHC.Generics.MetaSel
                                                                                                                               ('GHC.Maybe.Just
                                                                                                                                  "userId")
                                                                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                                                                               'GHC.Generics.NoSourceStrictness
                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                            (GHC.Generics.K1
                                                                                                                               GHC.Generics.R
                                                                                                                               GHC.Types.Int)
                                                                                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                                                                                              GHC.Generics.S
                                                                                                                                              ('GHC.Generics.MetaSel
                                                                                                                                                 ('GHC.Maybe.Just
                                                                                                                                                    "name")
                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                              (GHC.Generics.K1
                                                                                                                                                 GHC.Generics.R
                                                                                                                                                 GHC.Base.String)
                                                                                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                                                                                               GHC.Generics.S
                                                                                                                                                               ('GHC.Generics.MetaSel
                                                                                                                                                                  ('GHC.Maybe.Just
                                                                                                                                                                     "color")
                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                               (GHC.Generics.K1
                                                                                                                                                                  GHC.Generics.R
                                                                                                                                                                  Main.Color))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Main.User
                   ds1
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "userId")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Types.Int>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                       <*>_N
                                                                       <GHC.Generics.R>_P
                                                                       <GHC.Types.Int>_R
                                                                       <x>_P)
                   ds3
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "name")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R GHC.Base.String>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                         <*>_N
                                                                         <GHC.Generics.R>_P
                                                                         <GHC.Base.String>_R
                                                                         <x>_P)
                   ds4
                     `cast`
                   (GHC.Generics.N:M1[0]
                        <*>_N
                        <GHC.Generics.S>_P
                        <'GHC.Generics.MetaSel
                           ('GHC.Maybe.Just "color")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy>_P
                        <GHC.Generics.K1
                           GHC.Generics.R Main.Color>_R <x>_N ; GHC.Generics.N:K1[0]
                                                                    <*>_N
                                                                    <GHC.Generics.R>_P
                                                                    <Main.Color>_R
                                                                    <x>_P) } }) -}
e2c7550ecea16dd8c8142c734a8d5618
  $fFromJSONUser_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  Data.Aeson.Types.FromJSON.$fFromJSONChar_$cparseJSONList
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
285af3cfbb7214eb2f2041dc28f35972
  $fFromJSONUser_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "color")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "color")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "color")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   Main.$fFromJSONUser3)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "color")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "color")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "color")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "color")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "color")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "color")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
837652a8490b21d0cf7f6dabd8e2b50c
  $fFromJSONUser_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "name")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "name")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   Main.$fFromJSONUser6)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "name")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "name")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "name")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "name")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
568d64a1018637464addbab4d05f1dd5
  $fFromJSONUser_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Maybe.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Maybe.Just "userId")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (eta :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   Main.$fFromJSONUser9)
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceUnpackedness
                          `cast`
                        (GHC.Generics.D:R:SingSourceUnpackednessa0[0] <'GHC.Generics.NoSourceUnpackedness>_N) of wild { GHC.Generics.SNoSourceUnpackedness co ->
                   GHC.Generics.NoSourceUnpackedness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userId")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceUnpackedness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSNoSourceStrictness
                          `cast`
                        (GHC.Generics.D:R:SingSourceStrictnessa0[0] <'GHC.Generics.NoSourceStrictness>_N) of wild { GHC.Generics.SNoSourceStrictness co ->
                   GHC.Generics.NoSourceStrictness
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userId")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepSourceStrictness[0]))
                  (\ @ k
                     @ t :: GHC.Generics.Meta -> (k -> *) -> k -> *
                     @ f :: k -> *
                     @ a :: k
                     (ds1 :: t ('GHC.Generics.MetaSel
                                  ('GHC.Maybe.Just "userId")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy) f a) ->
                   case GHC.Generics.$WSDecidedLazy
                          `cast`
                        (GHC.Generics.D:R:SingDecidedStrictnessa0[0] <'GHC.Generics.DecidedLazy>_N) of wild { GHC.Generics.SDecidedLazy co ->
                   GHC.Generics.DecidedLazy
                     `cast`
                   (Sub (Sym (GHC.Generics.D:R:DemoteRepDecidedStrictness[0]))) })
                    `cast`
                  (forall (k :: <*>_N) (t :: <GHC.Generics.Meta
                                              -> (k -> *) -> k -> *>_N) (f :: <k
                                                                               -> *>_N) (a :: <k>_N).
                   <t ('GHC.Generics.MetaSel
                         ('GHC.Maybe.Just "userId")
                         'GHC.Generics.NoSourceUnpackedness
                         'GHC.Generics.NoSourceStrictness
                         'GHC.Generics.DecidedLazy) f a>_R
                   ->_R Sub (GHC.Generics.D:R:DemoteRepDecidedStrictness[0])) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fFromJSONUser_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [Main.User]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
4d5c5ee92281e05730b9ad2e319ecad8
  $fFromJSONUser_opts :: Data.Aeson.Types.Internal.Options
  {- Strictness: m,
     Unfolding: (Data.Aeson.Types.Internal.Options
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False
                   GHC.Types.False) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fGenericColor :: GHC.Generics.Generic Main.Color
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Color
                  Main.$fGenericColor1
                    `cast`
                  (forall (x :: <*>_N).
                   <Main.Color>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData "Color" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: (GHC.Generics.M1
                                                       GHC.Generics.C
                                                       ('GHC.Generics.MetaCons
                                                          "Green"
                                                          'GHC.Generics.PrefixI
                                                          'GHC.Types.False)
                                                       GHC.Generics.U1
                                                     GHC.Generics.:+: GHC.Generics.M1
                                                                        GHC.Generics.C
                                                                        ('GHC.Generics.MetaCons
                                                                           "Blue"
                                                                           'GHC.Generics.PrefixI
                                                                           'GHC.Types.False)
                                                                        GHC.Generics.U1)>_R) ; Sub (Sym (Main.Rep_Color[0]))) <x>_N)
                  Main.$fFromJSONColor_$cto -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fGenericColor1 ::
    Main.Color
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.M1
                             GHC.Generics.C
                             ('GHC.Generics.MetaCons
                                "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1)
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Main.Color) ->
                 case x1 of wild {
                   Main.Red -> Main.$fGenericColor6 @ x
                   Main.Green -> Main.$fGenericColor4 @ x
                   Main.Blue -> Main.$fGenericColor2 @ x }) -}
1fde515aeea326e95447b83852a69bc4
  $fGenericColor2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Main.$fGenericColor3 @ x)) -}
a3edc4e0acca4a647dcd9c9388deaee5
  $fGenericColor3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
7779e92d8e5f63efe919ef945fd17285
  $fGenericColor4 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ x ->
                 GHC.Generics.R1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (Main.$fGenericColor5 @ x)) -}
ec5140dee597c59ece316386d94f5434
  $fGenericColor5 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Green" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
1579dd355582dd407dc9a41714957091
  $fGenericColor6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1
       GHC.Generics.:+: GHC.Generics.M1
                          GHC.Generics.C
                          ('GHC.Generics.MetaCons
                             "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                          GHC.Generics.U1)
      x
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (\ @ x ->
                 GHC.Generics.L1
                   @ *
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1
                      GHC.Generics.:+: GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                   @ x
                   (GHC.Generics.U1 @ * @ x)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <*>_N
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "Red" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <x>_N)) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fGenericUser :: GHC.Generics.Generic Main.User
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fGenericUser1
                    `cast`
                  (forall (x :: <*>_N).
                   <Main.User>_R
                   ->_R (Sym (GHC.Generics.N:M1[0]
                                  <*>_N
                                  <GHC.Generics.D>_P
                                  <'GHC.Generics.MetaData "User" "Main" "main" 'GHC.Types.False>_P
                                  <GHC.Generics.M1
                                     GHC.Generics.C
                                     ('GHC.Generics.MetaCons
                                        "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Maybe.Just "userId")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Maybe.Just "name")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Maybe.Just
                                                                                 "color")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              Main.Color)))>_R) ; Sub (Sym (Main.Rep_User[0]))) <x>_N)
                  Main.$fFromJSONUser_$cto -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fGenericUser1 ::
    Main.User
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Maybe.Just "userId")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "name")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Maybe.Just "color")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R Main.Color)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: Main.User) ->
                 case x1 of wild { Main.User g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ *
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "userId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Maybe.Just "name")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Maybe.Just "color")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R Main.Color))
                    @ x
                    g1
                      `cast`
                    (Sym (GHC.Generics.N:K1[0]
                              <*>_N
                              <GHC.Generics.R>_P
                              <GHC.Types.Int>_R
                              <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                <*>_N
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "userId")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R GHC.Types.Int>_R) <x>_N)
                    (GHC.Generics.:*:
                       @ *
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "name")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Maybe.Just "color")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R Main.Color))
                       @ x
                       g2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <GHC.Base.String>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "name")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R GHC.Base.String>_R) <x>_N)
                       g3
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <*>_N
                                 <GHC.Generics.R>_P
                                 <Main.Color>_R
                                 <x>_P) ; Sym (GHC.Generics.N:M1[0]
                                                   <*>_N
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Maybe.Just "color")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R Main.Color>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <*>_N
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "User" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Maybe.Just "userId")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Maybe.Just "name")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Maybe.Just "color")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    Main.Color))>_R) <x>_N) }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowColor :: GHC.Show.Show Main.Color
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Color
                  Main.$fShowColor_$cshowsPrec
                  Main.$fShowColor_$cshow
                  Main.$fShowColor_$cshowList -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowColor_$cshow :: Main.Color -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.Color) ->
                 case x of wild {
                   Main.Red -> Main.$fFromJSONColor9
                   Main.Green -> Main.$fFromJSONColor7
                   Main.Blue -> Main.$fFromJSONColor5 }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowColor_$cshowList :: [Main.Color] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.Color]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.Color Main.$w$cshowsPrec ls s) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowColor_$cshowsPrec ::
    GHC.Types.Int -> Main.Color -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [2],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.Color)
                   (w2 :: GHC.Base.String) ->
                 Main.$w$cshowsPrec w1 w2) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowUser :: GHC.Show.Show Main.User
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fShowUser_$cshowsPrec
                  Main.$fShowUser_$cshow
                  Main.$fShowUser_$cshowList -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowUser1 :: Main.User -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U(U),1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Main.User) (w1 :: GHC.Base.String) ->
                 case w of ww { Main.User ww1 ww2 ww3 ->
                 Main.$w$cshowsPrec1 0# ww1 ww2 ww3 w1 }) -}
9c39774439d4b196f2c4274185937f8a
  $fShowUser2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
b7814d50ed78c00131ebde71df7edb01
  $fShowUser3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("color = "#) -}
3752f6339d1e932b2b95032267e0506b
  $fShowUser4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("name = "#) -}
0648ebe8fc0ba918592547366c4319e0
  $fShowUser5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("userId = "#) -}
a1e31cac6efca88847936e90111cf7bf
  $fShowUser6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("User {"#) -}
7d837476935735dbc5b4b2457d1631bb
  $fShowUser7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowUser_$cshow :: Main.User -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.User) ->
                 Main.$fShowUser_$cshowsPrec
                   Main.$fShowUser7
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowUser_$cshowList :: [Main.User] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.User]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ Main.User Main.$fShowUser1 ls s) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fShowUser_$cshowsPrec ::
    GHC.Types.Int -> Main.User -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U,1*U)><L,U>,
     Inline: [2],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Main.User)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.User ww3 ww4 ww5 ->
                 Main.$w$cshowsPrec1 ww1 ww3 ww4 ww5 w2 } }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONColor :: Data.Aeson.Types.ToJSON.ToJSON Main.Color
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.Color
                  Main.$fToJSONColor_$ctoJSON
                  Main.$fToJSONColor_$ctoEncoding
                  Main.$fToJSONColor_$ctoJSONList
                  Main.$fToJSONColor_$ctoEncodingList -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONColor_$ctoEncoding ::
    Main.Color -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Main.Color) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Main.$fToJSONColor_$ctoJSON x))
                  `cast`
                (<Main.Color>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONColor_$ctoEncodingList ::
    [Main.Color] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.Color
                   Main.$fToJSONColor_$ctoEncoding) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONColor_$ctoJSON ::
    Main.Color -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.Color) ->
                 case Main.$w$ctoJSON w of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONColor_$ctoJSONList ::
    [Main.Color] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Main.Color]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.Color
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.Color
                                     c
                                     Main.$fToJSONColor_$ctoJSON)
                                  n1
                                  x)))))) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONUser :: Data.Aeson.Types.ToJSON.ToJSON Main.User
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.User
                  Main.$fToJSONUser_$ctoJSON
                  Main.$fToJSONUser_$ctoEncoding
                  Main.$fToJSONUser_$ctoJSONList
                  Main.$fToJSONUser_$ctoEncodingList -}
71ab38f1e0170bd2eab7f7106cb4951d
  $fToJSONUser1 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONUser2 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
fb13a9244f4d5e88e69840f3ae45698a
  $fToJSONUser2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fFromJSONUser3
                   0#
                   ipv1 }) -}
584c23879120224739a81f88d8cad27d
  $fToJSONUser3 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONUser4 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
b22828790bb43620dad35fef5f196e35
  $fToJSONUser4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fFromJSONUser6
                   0#
                   ipv1 }) -}
998df2c5b0973c6ec3db93ff335af735
  $fToJSONUser5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        Main.$fToJSONUser6 of ds1 { (#,#) ipv1 ipv2 ->
                 ipv2 }) -}
03ea19a834bdf7a84807b1290aa4abde
  $fToJSONUser6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        10#
                        s1 of ds1 { (#,#) ipv1 ipv2 ->
                 Data.Aeson.Types.ToJSON.$wouter1
                   ipv2
                   4#
                   Main.$fFromJSONUser9
                   0#
                   ipv1 }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONUser_$ctoEncoding ::
    Main.User -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: Main.User) ->
                 Data.Aeson.Encoding.Builder.encodeToBuilder
                   (Main.$fToJSONUser_$ctoJSON x))
                  `cast`
                (<Main.User>_R
                 ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                               <Data.Aeson.Types.Internal.Value>_P)) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONUser_$ctoEncodingList ::
    [Main.User] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (Data.Aeson.Encoding.Internal.list
                   @ Main.User
                   Main.$fToJSONUser_$ctoEncoding) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONUser_$ctoJSON ::
    Main.User -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>m1, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Main.User) ->
                 case w of ww { Main.User ww1 ww2 ww3 ->
                 case Main.$w$ctoJSON1 ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $fToJSONUser_$ctoJSONList ::
    [Main.User] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (x :: [Main.User]) ->
                 Data.Aeson.Types.Internal.$WArray
                   (Data.Vector.Generic.new
                      @ Data.Vector.Vector
                      @ Data.Aeson.Types.Internal.Value
                      (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                      (Data.Vector.Generic.New.unstream
                         @ Data.Vector.Vector
                         @ Data.Aeson.Types.Internal.Value
                         (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                         (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                            @ Data.Vector.Fusion.Util.Id
                            @ Data.Aeson.Types.Internal.Value
                            @ Data.Vector.Vector
                            Data.Vector.Fusion.Util.$fMonadId
                            Data.Vector.Fusion.Bundle.Size.Unknown
                            (GHC.Base.build
                               @ Data.Aeson.Types.Internal.Value
                               (\ @ b1
                                  (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                  (n1 :: b1)[OneShot] ->
                                GHC.Base.foldr
                                  @ Main.User
                                  @ b1
                                  (GHC.Base.mapFB
                                     @ Data.Aeson.Types.Internal.Value
                                     @ b1
                                     @ Main.User
                                     c
                                     Main.$fToJSONUser_$ctoJSON)
                                  n1
                                  x)))))) -}
7d716594cacc99044321b8f27866b515
  $s$fConstructorMetaMetaCons2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("User"#) -}
a0041379245aee808e80f39c42084215
  $s$fGFromJSONarityM11_$cgParseJSON8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
fcb721c30ed5ed7d5bafe08c0e57bee0
  $s$fToJSON[] :: Data.Aeson.Types.ToJSON.ToJSON [Main.User]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [Main.User]
                  Main.$fToJSONUser_$ctoJSONList
                  Main.$fToJSONUser_$ctoEncodingList
                  (\ (x :: [[Main.User]]) ->
                   Data.Aeson.Types.Internal.$WArray
                     (Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n1 :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ [Main.User]
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ [Main.User]
                                       c
                                       Main.$fToJSONUser_$ctoJSONList)
                                    n1
                                    x))))))
                  (Data.Aeson.Encoding.Internal.list
                     @ [Main.User]
                     Main.$fToJSONUser_$ctoEncodingList) -}
66f40f769d3cbcf6c2132462bd0e0d74
  $tc'Blue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9943279084526582132##
                   6790008591247440631##
                   Main.$trModule
                   Main.$tc'Blue2
                   0#
                   Main.$tc'Blue1) -}
46cc1053a946645b28cc0df63e1a7869
  $tc'Blue1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
54893d3686628a5f051b929e4570e2c9
  $tc'Blue2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Blue3) -}
289ab762f10ab4d0ef31beaedbcd91a7
  $tc'Blue3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Blue"#) -}
779f3ccf547fcec8f8d9c7559bb90320
  $tc'Green :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9914196461078998278##
                   5481564151281004408##
                   Main.$trModule
                   Main.$tc'Green1
                   0#
                   Main.$tc'Blue1) -}
d2d442aed0b73f21cf791d34cd4896e5
  $tc'Green1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Green2) -}
c148f0355e1c8ac4b53985d9c5337cdb
  $tc'Green2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Green"#) -}
a4f0fd113a894b8d21b4ec539c891b6b
  $tc'Red :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5617426204813736279##
                   12331342218150123382##
                   Main.$trModule
                   Main.$tc'Red1
                   0#
                   Main.$tc'Blue1) -}
d0459dcefcd319eca53d0879da921480
  $tc'Red1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Red2) -}
0aed0acd95af31238d9c52532d0fbef0
  $tc'Red2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Red"#) -}
2fcf8bf1decadaaf76f8f72d66b7430b
  $tc'User :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11946000597272154797##
                   14513426697953938300##
                   Main.$trModule
                   Main.$tc'User2
                   0#
                   Main.$tc'User1) -}
79b6144f6dc0b92368d27e4a147995e3
  $tc'User1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
22c86b5f84a74d2f231dd5f2b7be02e7
  $tc'User2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'User3) -}
72a67a33dea96547d55a61725feeda8e
  $tc'User3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'User"#) -}
b6bf3855d987b740844b2f98d39508a4
  $tcColor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6996184027453350222##
                   13104320352684360558##
                   Main.$trModule
                   Main.$tcColor1
                   0#
                   GHC.Types.krep$*) -}
36f5d55712f2e2fc2a7083959796f464
  $tcColor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcColor2) -}
102c397d3dbfd38ec365d35108004744
  $tcColor2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Color"#) -}
eb9a648c73d3addc0ac561bd13df29b5
  $tcUser :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3086115112404147262##
                   4933156830667254212##
                   Main.$trModule
                   Main.$tcUser1
                   0#
                   GHC.Types.krep$*) -}
93fc008141cbd1311e8f4a45d745bdf5
  $tcUser1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$s$fConstructorMetaMetaCons2) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $w$cshowsPrec :: Main.Color -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.Color) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Main.Red -> GHC.Base.++ @ GHC.Types.Char Main.$fFromJSONColor9 w1
                   Main.Green -> GHC.Base.++ @ GHC.Types.Char Main.$fFromJSONColor7 w1
                   Main.Blue
                   -> GHC.Base.++ @ GHC.Types.Char Main.$fFromJSONColor5 w1 }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> Main.Color
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U(U)><L,1*U><L,1*U><L,U>,
     Inline: [2],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: Main.Color)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Main.$fShowUser6
                       (GHC.CString.unpackAppendCString#
                          Main.$fShowUser5
                          (case ww1 of ww4 { GHC.Types.I# ww5 ->
                           case GHC.Show.$wshowSignedInt
                                  0#
                                  ww5
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.showCommaSpace1
                                     (GHC.CString.unpackAppendCString#
                                        Main.$fShowUser4
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.$fShow(,)3
                                           (GHC.Show.showLitString
                                              ww2
                                              (GHC.Types.:
                                                 @ GHC.Types.Char
                                                 GHC.Show.$fShow(,)3
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    GHC.Show.showCommaSpace1
                                                    (GHC.CString.unpackAppendCString#
                                                       Main.$fShowUser3
                                                       (case ww3 of wild {
                                                          Main.Red
                                                          -> GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Main.$fFromJSONColor9
                                                               (GHC.CString.unpackAppendCString#
                                                                  Main.$fShowUser2
                                                                  x)
                                                          Main.Green
                                                          -> GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Main.$fFromJSONColor7
                                                               (GHC.CString.unpackAppendCString#
                                                                  Main.$fShowUser2
                                                                  x)
                                                          Main.Blue
                                                          -> GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Main.$fFromJSONColor5
                                                               (GHC.CString.unpackAppendCString#
                                                                  Main.$fShowUser2
                                                                  x) })))))))) of ww6 { (#,#) ww7 ww8 ->
                           GHC.Types.: @ GHC.Types.Char ww7 ww8 } }))
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT -> p w
                   1#
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $w$ctoJSON :: Main.Color -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [2],
     Unfolding: (\ (w :: Main.Color) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds1 { (#,#) ipv1 ipv2 ->
                         case w of wild {
                           Main.Red
                           -> Data.Aeson.Types.ToJSON.$wouter
                                ipv2
                                4#
                                Main.$fFromJSONColor9
                                0#
                                ipv1
                           Main.Green
                           -> Data.Aeson.Types.ToJSON.$wouter
                                ipv2
                                4#
                                Main.$fFromJSONColor7
                                0#
                                ipv1
                           Main.Blue
                           -> Data.Aeson.Types.ToJSON.$wouter
                                ipv2
                                4#
                                Main.$fFromJSONColor5
                                0#
                                ipv1 } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 (# dt #) } }) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  $w$ctoJSON1 ::
    GHC.Types.Int
    -> GHC.Base.String
    -> Main.Color
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U><L,1*U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: Main.Color) ->
                 case Data.Aeson.Types.ToJSON.$fFromPairsValueDList_go
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Main.$fToJSONUser5,
                            case ww of wild { GHC.Types.I# i ->
                            case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                            Data.Aeson.Types.Internal.Number
                              (Data.Scientific.Scientific dt 0#) } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONUser3,
                               case GHC.Magic.runRW#
                                      @ ('GHC.Types.TupleRep
                                           '[ 'GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                                      @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                                           Data.Text.Internal.Text #)
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newByteArray#
                                              @ GHC.Prim.RealWorld
                                              10#
                                              s1 of ds1 { (#,#) ipv ipv1 ->
                                       Main.$wouter ipv1 4# ww1 0# ipv }) of ds1 { (#,#) ipv ipv1 ->
                               case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                               Data.Aeson.Types.Internal.String dt } })
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Main.$fToJSONUser1, Main.$fToJSONColor_$ctoJSON ww2)
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of ww3 { Data.Aeson.Types.Internal.Object ww4 ->
                 (# ww4 #) }) -}
9f1048776d66ee8be89f49dc722fc4c7
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [2] -}
b8b77da80eaa939567e9c3dd4e70a33b
  $wroutes ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> (# (),
          Web.Scotty.Internal.Types.ScottyState
            Data.Text.Internal.Lazy.Text GHC.Types.IO #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>, Inline: [2],
     Unfolding: (\ (w :: Web.Scotty.Internal.Types.ScottyState
                           Data.Text.Internal.Lazy.Text GHC.Types.IO) ->
                 (# GHC.Tuple.(),
                    case w of wild { Web.Scotty.Internal.Types.ScottyState ds ds1 ds2 ->
                    Web.Scotty.Internal.Types.ScottyState
                      @ Data.Text.Internal.Lazy.Text
                      @ GHC.Types.IO
                      ds
                      (GHC.Types.:
                         @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                         (Web.Scotty.Route.route
                            @ Data.Text.Internal.Lazy.Text
                            @ GHC.Types.IO
                            Web.Scotty.Internal.Types.$fScottyErrorText
                            Control.Monad.IO.Class.$fMonadIOIO
                            ds2
                            Web.Scotty.post2
                            Main.main26
                            Main.bluifyRoute1
                              `cast`
                            (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <Web.Scotty.Internal.Types.ActionEnv>_R
                                      <Control.Monad.Trans.State.Lazy.StateT
                                         Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Web.Scotty.Internal.Types.ActionError
                                            Data.Text.Internal.Lazy.Text)
                                         ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                            <Web.Scotty.Internal.Types.ActionError
                                                               Data.Text.Internal.Lazy.Text>_N
                                                            <Control.Monad.Trans.Reader.ReaderT
                                                               Web.Scotty.Internal.Types.ActionEnv
                                                               (Control.Monad.Trans.State.Lazy.StateT
                                                                  Web.Scotty.Internal.Types.ScottyResponse
                                                                  GHC.Types.IO)>_R
                                                            <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                               <Data.Text.Internal.Lazy.Text>_N
                                                                               <GHC.Types.IO>_R) <()>_N)))
                         (GHC.Types.:
                            @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                            (Web.Scotty.Route.route
                               @ Data.Text.Internal.Lazy.Text
                               @ GHC.Types.IO
                               Web.Scotty.Internal.Types.$fScottyErrorText
                               Control.Monad.IO.Class.$fMonadIOIO
                               ds2
                               Web.Scotty.get2
                               Main.main23
                               Main.main17
                                 `cast`
                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                         <Web.Scotty.Internal.Types.ActionEnv>_R
                                         <Control.Monad.Trans.State.Lazy.StateT
                                            Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                         <Data.Either.Either
                                            (Web.Scotty.Internal.Types.ActionError
                                               Data.Text.Internal.Lazy.Text)
                                            ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                               <Web.Scotty.Internal.Types.ActionError
                                                                  Data.Text.Internal.Lazy.Text>_N
                                                               <Control.Monad.Trans.Reader.ReaderT
                                                                  Web.Scotty.Internal.Types.ActionEnv
                                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                                     Web.Scotty.Internal.Types.ScottyResponse
                                                                     GHC.Types.IO)>_R
                                                               <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                                  <Data.Text.Internal.Lazy.Text>_N
                                                                                  <GHC.Types.IO>_R) <()>_N)))
                            (GHC.Types.:
                               @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                               (Web.Scotty.Route.route
                                  @ Data.Text.Internal.Lazy.Text
                                  @ GHC.Types.IO
                                  Web.Scotty.Internal.Types.$fScottyErrorText
                                  Control.Monad.IO.Class.$fMonadIOIO
                                  ds2
                                  Web.Scotty.get2
                                  Main.main14
                                  Main.usersRoute)
                               (GHC.Types.:
                                  @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                                  (Web.Scotty.Route.route
                                     @ Data.Text.Internal.Lazy.Text
                                     @ GHC.Types.IO
                                     Web.Scotty.Internal.Types.$fScottyErrorText
                                     Control.Monad.IO.Class.$fMonadIOIO
                                     ds2
                                     Web.Scotty.get2
                                     Main.main11
                                     Main.main7
                                       `cast`
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <Web.Scotty.Internal.Types.ActionEnv>_R
                                               <Control.Monad.Trans.State.Lazy.StateT
                                                  Web.Scotty.Internal.Types.ScottyResponse
                                                  GHC.Types.IO>_R
                                               <Data.Either.Either
                                                  (Web.Scotty.Internal.Types.ActionError
                                                     Data.Text.Internal.Lazy.Text)
                                                  ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                     <Web.Scotty.Internal.Types.ActionError
                                                                        Data.Text.Internal.Lazy.Text>_N
                                                                     <Control.Monad.Trans.Reader.ReaderT
                                                                        Web.Scotty.Internal.Types.ActionEnv
                                                                        (Control.Monad.Trans.State.Lazy.StateT
                                                                           Web.Scotty.Internal.Types.ScottyResponse
                                                                           GHC.Types.IO)>_R
                                                                     <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                                        <Data.Text.Internal.Lazy.Text>_N
                                                                                        <GHC.Types.IO>_R) <()>_N)))
                                  (GHC.Types.:
                                     @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                                     (Web.Scotty.Route.route
                                        @ Data.Text.Internal.Lazy.Text
                                        @ GHC.Types.IO
                                        Web.Scotty.Internal.Types.$fScottyErrorText
                                        Control.Monad.IO.Class.$fMonadIOIO
                                        ds2
                                        Web.Scotty.get2
                                        Main.main3
                                        Main.helloRoute)
                                     ds1)))))
                      ds2 } #)) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  data Color = Red | Green | Blue
be93f5f09bc6f6bcee0bd62b77909bc8
  axiom Main.Rep_Color::
      GHC.Generics.Rep Main.Color
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "Color" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Red" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1
             GHC.Generics.:+: (GHC.Generics.C1
                                 ('GHC.Generics.MetaCons
                                    "Green" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                 GHC.Generics.U1
                               GHC.Generics.:+: GHC.Generics.C1
                                                  ('GHC.Generics.MetaCons
                                                     "Blue" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                  GHC.Generics.U1))
be93f5f09bc6f6bcee0bd62b77909bc8
  axiom Main.Rep_User::
      GHC.Generics.Rep Main.User
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "User" "Main" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "User" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Maybe.Just "userId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Maybe.Just "name")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Maybe.Just "color")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 Main.Color))))
be93f5f09bc6f6bcee0bd62b77909bc8
  data User
    = User {userId :: GHC.Types.Int,
            name :: GHC.Base.String,
            color :: Main.Color}
9aeb78960bd12b743f3d617485d40965
  allUsers :: [Main.User]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ Main.User Main.bob Main.allUsers1) -}
49e185996671e9cda7f4484dbfe2ae4c
  allUsers1 :: [Main.User]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Main.User
                   Main.jenny
                   (GHC.Types.[] @ Main.User)) -}
548b3c1a9f7ec038986d5eb734776ab5
  bluify :: Main.User -> Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (user :: Main.User) ->
                 Main.User
                   (case user of wild { Main.User ds ds1 ds2 -> ds })
                   (case user of wild { Main.User ds ds1 ds2 -> ds1 })
                   Main.Blue) -}
6119397e1463b32c087bd9f25919af9d
  bluifyRoute :: Web.Scotty.ActionM ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.bluifyRoute1
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <Web.Scotty.Internal.Types.ActionEnv>_R
                          <Control.Monad.Trans.State.Lazy.StateT
                             Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                          <Data.Either.Either
                             (Web.Scotty.Internal.Types.ActionError
                                Data.Text.Internal.Lazy.Text)
                             ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                <Web.Scotty.Internal.Types.ActionError
                                                   Data.Text.Internal.Lazy.Text>_N
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   Web.Scotty.Internal.Types.ActionEnv
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Web.Scotty.Internal.Types.ScottyResponse
                                                      GHC.Types.IO)>_R
                                                <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                   <Data.Text.Internal.Lazy.Text>_N
                                                                   <GHC.Types.IO>_R) <()>_N)) -}
16888f6ecefc56a91d7569eea83bae22
  bluifyRoute1 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 let {
                   m1 :: Control.Monad.Trans.State.Lazy.StateT
                           Web.Scotty.Internal.Types.ScottyResponse
                           GHC.Types.IO
                           (Data.Either.Either
                              (Web.Scotty.Internal.Types.ActionError
                                 Data.Text.Internal.Lazy.Text)
                              Main.User)
                   = Web.Scotty.Action.jsonData1
                       @ Main.User
                       @ Data.Text.Internal.Lazy.Text
                       @ GHC.Types.IO
                       Main.$fFromJSONUser
                       Web.Scotty.Internal.Types.$fScottyErrorText
                       Control.Monad.IO.Class.$fMonadIOIO
                       w4
                 } in
                 (\ (s1 :: Web.Scotty.Internal.Types.ScottyResponse)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (m1
                          `cast`
                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                             <GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                Main.User>_N)
                          s1)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                Main.User,
                              Web.Scotty.Internal.Types.ScottyResponse)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of ww { (,) ww1 ww2 ->
                  case ww1 of wild {
                    Data.Either.Left e1
                    -> (# ipv,
                          (Data.Either.Left
                             @ (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                             @ ()
                             e1,
                           ww2) #)
                    Data.Either.Right x
                    -> case (((Main.bluifyRoute3 Web.Scotty.Action.json1)
                                `cast`
                              (Web.Scotty.Internal.Types.N:ActionT[0]
                                   <Data.Text.Internal.Lazy.Text>_N
                                   <GHC.Types.IO>_R <()>_N ; (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                  <Web.Scotty.Internal.Types.ActionError
                                                                     Data.Text.Internal.Lazy.Text>_N
                                                                  <Control.Monad.Trans.Reader.ReaderT
                                                                     Web.Scotty.Internal.Types.ActionEnv
                                                                     (Control.Monad.Trans.State.Lazy.StateT
                                                                        Web.Scotty.Internal.Types.ScottyResponse
                                                                        GHC.Types.IO)>_R
                                                                  <()>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                               <Web.Scotty.Internal.Types.ActionEnv>_R
                                                                               <Control.Monad.Trans.State.Lazy.StateT
                                                                                  Web.Scotty.Internal.Types.ScottyResponse
                                                                                  GHC.Types.IO>_R
                                                                               <Data.Either.Either
                                                                                  (Web.Scotty.Internal.Types.ActionError
                                                                                     Data.Text.Internal.Lazy.Text)
                                                                                  ()>_N))
                                w4)
                               `cast`
                             (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                  <Web.Scotty.Internal.Types.ScottyResponse>_N
                                  <GHC.Types.IO>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     ()>_N)
                               ww2)
                              `cast`
                            (GHC.Types.N:IO[0]
                                 <(Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     (),
                                   Web.Scotty.Internal.Types.ScottyResponse)>_R)
                              ipv of ds2 { (#,#) ipv2 ipv3 ->
                       case ipv3 of ww4 { (,) ww5 ww6 ->
                       case ww5 of wild1 {
                         Data.Either.Left e1 -> ds2
                         Data.Either.Right x1
                         -> (# ipv2,
                               (Main.bluifyRoute2,
                                case ww6 of wild2 { Web.Scotty.Internal.Types.SR ds ds3 ds4 ->
                                Web.Scotty.Internal.Types.SR
                                  ds
                                  ds3
                                  (Web.Scotty.Internal.Types.ContentBuilder
                                     (Web.Scotty.Action.html2
                                        (Data.ByteString.Builder.toLazyByteString
                                           (case Main.$w$ctoJSON1
                                                   (case x of wild3 { Main.User ds5 ds6 ds7 ->
                                                    ds5 })
                                                   (case x of wild3 { Main.User ds5 ds6 ds7 ->
                                                    ds6 })
                                                   Main.Blue of ww7 { Unit# ww8 ->
                                            Data.Aeson.Encoding.Builder.encodeToBuilder
                                              (Data.Aeson.Types.Internal.Object ww8) })))
                                       `cast`
                                     ((forall (r :: <*>_N).
                                       <Data.ByteString.Builder.Internal.BuildStep r>_R
                                       ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     <Data.ByteString.Builder.Internal.BuildSignal
                                                        r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))) }) #) } } } } } })
                   `cast`
                 ((<Web.Scotty.Internal.Types.ScottyResponse>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <(Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     (),
                                   Web.Scotty.Internal.Types.ScottyResponse)>_R)) ; Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                                                                                             <GHC.Types.IO>_R
                                                                                             <Data.Either.Either
                                                                                                (Web.Scotty.Internal.Types.ActionError
                                                                                                   Data.Text.Internal.Lazy.Text)
                                                                                                ()>_N))) -}
4a9b717c2c33f6f6594c083960b82ee5
  bluifyRoute2 ::
    Data.Either.Either
      (Web.Scotty.Internal.Types.ActionError
         Data.Text.Internal.Lazy.Text)
      ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ (Web.Scotty.Internal.Types.ActionError
                        Data.Text.Internal.Lazy.Text)
                   @ ()
                   GHC.Tuple.()) -}
7ae0f6f1459069bea9297a04bd538c24
  bluifyRoute3 ::
    Data.Text.Internal.Lazy.Text
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Action.changeHeader
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   Web.Scotty.Action.html7
                   Web.Scotty.Action.html5) -}
ecd81961c0deadb619f28b79f21a9fda
  bob :: Main.User
  {- Strictness: m,
     Unfolding: (Main.User Main.bob3 Main.bob1 Main.Red) -}
982ed1e0f2db31b9589c2b35e9cc86ef
  bob1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.bob2) -}
6a0c378519476ed454a2340f958731ee
  bob2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("bob"#) -}
e2f9dab523292b647c930e4d0d6a691a
  bob3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  color :: Main.User -> Main.Color
  RecSel Left Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.User) ->
                 case ds of wild { Main.User ds1 ds2 ds3 -> ds3 }) -}
8875ab8ce28ee8240e13c69c01da8874
  emptyRes :: Web.Scotty.ActionM ()
  {- Unfolding: (Web.Scotty.Action.$wtext
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   Data.Text.Internal.Lazy.Empty) -}
af260ae667f6f21051f0fb6f9cbaf190
  helloRoute :: Web.Scotty.ActionM ()
  {- Unfolding: (Web.Scotty.Action.$wtext
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   Main.helloRoute1) -}
6a68457a71f6c7c8f2f1478aa5e11a95
  helloRoute1 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# Main.helloRoute2) -}
316d562009bd5408c8b86581bf419e8f
  helloRoute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("howdy!"#) -}
ffd137ba8e6a3ffba2359e5bc556c8ce
  jenny :: Main.User
  {- Strictness: m,
     Unfolding: (Main.User
                   Main.$s$fGFromJSONarityM11_$cgParseJSON8
                   Main.jenny1
                   Main.Blue) -}
fd6345d4fe07025a5232072294a52e58
  jenny1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.jenny2) -}
63f60abb72d3543db391a40fe64dfa8c
  jenny2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("jenny"#) -}
e92ad49f8ef35cd737c1f66ca8fb2949
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
cb34ed3bea99e827f64dc9914c669585
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         Main.main30
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 Web.Scotty.scotty1
                   Main.main29
                   Main.main2
                     `cast`
                   ((<Web.Scotty.Internal.Types.ScottyState
                        Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                     ->_R Nth:3
                              (<Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                               ->_R Nth:3
                                        (<Web.Scotty.Internal.Types.ScottyState
                                            Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                                         ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                       <((),
                                                         Web.Scotty.Internal.Types.ScottyState
                                                           Data.Text.Internal.Lazy.Text
                                                           GHC.Types.IO)>_R)))) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                            <Web.Scotty.Internal.Types.ScottyState
                                                                                               Data.Text.Internal.Lazy.Text
                                                                                               GHC.Types.IO>_N
                                                                                            <Data.Functor.Identity.Identity>_R
                                                                                            <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                                                                               <Data.Text.Internal.Lazy.Text>_N
                                                                                                               <GHC.Types.IO>_N) <()>_N))
                   ipv }) -}
59ad21d9d55baf6cbd406ce955dd865a
  main10 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString#
                   Main.$fFromJSONUser7) -}
a01850f6a6f6e9a3aef2abfa3d85d4d3
  main11 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main12) -}
38a34d69da1be133a9f7741d71e12fd5
  main12 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main13
                        Main.main5
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
4ee32e58105e9f5a95f27be3c4a91123
  main13 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/hi/:name"#) -}
aef997b3b5a1a82e2d256f557558fb1e
  main14 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main15) -}
417d4db0a24ee2c56da44d1b4381ab6d
  main15 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main16
                        Main.main5
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
b87f7a79706ec515ee8cc0221aa7d866
  main16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/users"#) -}
40c0878d562a353e5be921743c14ba9e
  main17 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 Web.Scotty.Internal.Types.$w$c>>=
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   @ GHC.Types.Int
                   @ ()
                   Main.main20
                   Main.main18
                   w4) -}
68b08630ea78d01249ce1dd5bbab77f8
  main18 ::
    GHC.Types.Int
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (id :: GHC.Types.Int) ->
                 let {
                   found :: [Main.User]
                   = GHC.List.filter
                       @ Main.User
                       (\ (el :: Main.User) ->
                        case el of wild { Main.User ds ds1 ds2 ->
                        GHC.Classes.eqInt ds id })
                       Main.allUsers
                 } in
                 case GHC.List.$wlenAcc @ Main.User found 0# of ww2 {
                   DEFAULT
                   -> let {
                        k :: Web.Scotty.Internal.Types.ActionT
                               Data.Text.Internal.Lazy.Text GHC.Types.IO ()
                        = Web.Scotty.Action.$wjson
                            @ Main.User
                            @ Data.Text.Internal.Lazy.Text
                            @ GHC.Types.IO
                            Main.$fToJSONUser
                            GHC.Base.$fMonadIO
                            (GHC.List.$w!! @ Main.User found 0#)
                      } in
                      (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv)
                         (eta :: Web.Scotty.Internal.Types.ScottyResponse)
                         (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       ((k `cast`
                         (Web.Scotty.Internal.Types.N:ActionT[0]
                              <Data.Text.Internal.Lazy.Text>_N
                              <GHC.Types.IO>_R <()>_N ; (Control.Monad.Trans.Except.N:ExceptT[0]
                                                             <Web.Scotty.Internal.Types.ActionError
                                                                Data.Text.Internal.Lazy.Text>_N
                                                             <Control.Monad.Trans.Reader.ReaderT
                                                                Web.Scotty.Internal.Types.ActionEnv
                                                                (Control.Monad.Trans.State.Lazy.StateT
                                                                   Web.Scotty.Internal.Types.ScottyResponse
                                                                   GHC.Types.IO)>_R
                                                             <()>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                          <Web.Scotty.Internal.Types.ActionEnv>_R
                                                                          <Control.Monad.Trans.State.Lazy.StateT
                                                                             Web.Scotty.Internal.Types.ScottyResponse
                                                                             GHC.Types.IO>_R
                                                                          <Data.Either.Either
                                                                             (Web.Scotty.Internal.Types.ActionError
                                                                                Data.Text.Internal.Lazy.Text)
                                                                             ()>_N))
                           w4)
                          `cast`
                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                             <GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                ()>_N)
                          (case eta of wild { Web.Scotty.Internal.Types.SR ds ds1 ds2 ->
                           Web.Scotty.Internal.Types.SR
                             Network.HTTP.Types.Status.status200
                             ds1
                             ds2 }))
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                (),
                              Web.Scotty.Internal.Types.ScottyResponse)>_R)
                         eta1)
                        `cast`
                      ((<Web.Scotty.Internal.Types.ActionEnv>_R
                        ->_R (<Web.Scotty.Internal.Types.ScottyResponse>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <(Data.Either.Either
                                                (Web.Scotty.Internal.Types.ActionError
                                                   Data.Text.Internal.Lazy.Text)
                                                (),
                                              Web.Scotty.Internal.Types.ScottyResponse)>_R)) ; Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                        <Web.Scotty.Internal.Types.ScottyResponse>_N
                                                                                                        <GHC.Types.IO>_R
                                                                                                        <Data.Either.Either
                                                                                                           (Web.Scotty.Internal.Types.ActionError
                                                                                                              Data.Text.Internal.Lazy.Text)
                                                                                                           ()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                               <Web.Scotty.Internal.Types.ActionEnv>_R
                                                                                                                               <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                  Web.Scotty.Internal.Types.ScottyResponse
                                                                                                                                  GHC.Types.IO>_R
                                                                                                                               <Data.Either.Either
                                                                                                                                  (Web.Scotty.Internal.Types.ActionError
                                                                                                                                     Data.Text.Internal.Lazy.Text)
                                                                                                                                  ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                                                                     <Web.Scotty.Internal.Types.ActionError
                                                                                                                                                        Data.Text.Internal.Lazy.Text>_N
                                                                                                                                                     <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                        Web.Scotty.Internal.Types.ActionEnv
                                                                                                                                                        (Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                                           Web.Scotty.Internal.Types.ScottyResponse
                                                                                                                                                           GHC.Types.IO)>_R
                                                                                                                                                     <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                                                                                                                        <Data.Text.Internal.Lazy.Text>_N
                                                                                                                                                                        <GHC.Types.IO>_R) <()>_N)))
                   0#
                   -> Main.main19
                        `cast`
                      ((<Web.Scotty.Internal.Types.ActionEnv>_R
                        ->_R (<Web.Scotty.Internal.Types.ScottyResponse>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <(Data.Either.Either
                                                (Web.Scotty.Internal.Types.ActionError
                                                   Data.Text.Internal.Lazy.Text)
                                                (),
                                              Web.Scotty.Internal.Types.ScottyResponse)>_R)) ; Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                                        <Web.Scotty.Internal.Types.ScottyResponse>_N
                                                                                                        <GHC.Types.IO>_R
                                                                                                        <Data.Either.Either
                                                                                                           (Web.Scotty.Internal.Types.ActionError
                                                                                                              Data.Text.Internal.Lazy.Text)
                                                                                                           ()>_N)) ; (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                                                               <Web.Scotty.Internal.Types.ActionEnv>_R
                                                                                                                               <Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                  Web.Scotty.Internal.Types.ScottyResponse
                                                                                                                                  GHC.Types.IO>_R
                                                                                                                               <Data.Either.Either
                                                                                                                                  (Web.Scotty.Internal.Types.ActionError
                                                                                                                                     Data.Text.Internal.Lazy.Text)
                                                                                                                                  ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                                                                                     <Web.Scotty.Internal.Types.ActionError
                                                                                                                                                        Data.Text.Internal.Lazy.Text>_N
                                                                                                                                                     <Control.Monad.Trans.Reader.ReaderT
                                                                                                                                                        Web.Scotty.Internal.Types.ActionEnv
                                                                                                                                                        (Control.Monad.Trans.State.Lazy.StateT
                                                                                                                                                           Web.Scotty.Internal.Types.ScottyResponse
                                                                                                                                                           GHC.Types.IO)>_R
                                                                                                                                                     <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                                                                                                                        <Data.Text.Internal.Lazy.Text>_N
                                                                                                                                                                        <GHC.Types.IO>_R) <()>_N))) }) -}
fd18cccf4ca65fd23e93d9dd5006ce51
  main19 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Web.Scotty.Internal.Types.ScottyResponse
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Either.Either
             (Web.Scotty.Internal.Types.ActionError
                Data.Text.Internal.Lazy.Text)
             (),
           Web.Scotty.Internal.Types.ScottyResponse) #)
  {- Arity: 3, Strictness: <L,U><L,1*U(A,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv)
                   (eta :: Web.Scotty.Internal.Types.ScottyResponse)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 ((Main.emptyRes
                     `cast`
                   (Web.Scotty.Internal.Types.N:ActionT[0]
                        <Data.Text.Internal.Lazy.Text>_N
                        <GHC.Types.IO>_R <()>_N ; (Control.Monad.Trans.Except.N:ExceptT[0]
                                                       <Web.Scotty.Internal.Types.ActionError
                                                          Data.Text.Internal.Lazy.Text>_N
                                                       <Control.Monad.Trans.Reader.ReaderT
                                                          Web.Scotty.Internal.Types.ActionEnv
                                                          (Control.Monad.Trans.State.Lazy.StateT
                                                             Web.Scotty.Internal.Types.ScottyResponse
                                                             GHC.Types.IO)>_R
                                                       <()>_N ; Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <Web.Scotty.Internal.Types.ActionEnv>_R
                                                                    <Control.Monad.Trans.State.Lazy.StateT
                                                                       Web.Scotty.Internal.Types.ScottyResponse
                                                                       GHC.Types.IO>_R
                                                                    <Data.Either.Either
                                                                       (Web.Scotty.Internal.Types.ActionError
                                                                          Data.Text.Internal.Lazy.Text)
                                                                       ()>_N))
                     w4)
                    `cast`
                  (Control.Monad.Trans.State.Lazy.N:StateT[0]
                       <Web.Scotty.Internal.Types.ScottyResponse>_N
                       <GHC.Types.IO>_R
                       <Data.Either.Either
                          (Web.Scotty.Internal.Types.ActionError
                             Data.Text.Internal.Lazy.Text)
                          ()>_N)
                    (case eta of wild { Web.Scotty.Internal.Types.SR ds ds1 ds2 ->
                     Web.Scotty.Internal.Types.SR
                       Network.HTTP.Types.Status.status404
                       ds1
                       ds2 }))
                   `cast`
                 (GHC.Types.N:IO[0]
                      <(Data.Either.Either
                          (Web.Scotty.Internal.Types.ActionError
                             Data.Text.Internal.Lazy.Text)
                          (),
                        Web.Scotty.Internal.Types.ScottyResponse)>_R)
                   eta1) -}
48b3c79b79b51b0a6c15bc573f57549d
  main2 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> ((),
        Web.Scotty.Internal.Types.ScottyState
          Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m, Inline: [2],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Web.Scotty.Internal.Types.ScottyState
                           Data.Text.Internal.Lazy.Text GHC.Types.IO) ->
                 case Main.$wroutes w of ww { (#,#) ww1 ww2 -> (ww1, ww2) }) -}
3166338069ff4fac50c2ac201493a9ff
  main20 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO GHC.Types.Int
  {- Unfolding: (Web.Scotty.Action.param
                   @ GHC.Types.Int
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Action.$fParsableInt
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   GHC.Base.$fMonadIO
                   Main.main21) -}
e5442a0a8b748f5d700d77fc56d9301d
  main21 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# Main.main22) -}
4377500ed3a2c6734a37d2faccf2b922
  main22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("id"#) -}
ac7e08402920011da526f0f098593317
  main23 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main24) -}
51e34aa098b27dfdd8d72bc58d2e7920
  main24 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main25
                        Main.main5
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
ad3257cb4413a9106279757466a2d450
  main25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/users/:id"#) -}
665b1138ae9c426b89ea38fc810afe75
  main26 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main27) -}
6e88036cc41fe28b2248ef31a98aea63
  main27 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main28
                        Main.main5
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
e3194bb506666a691d4f48e151279361
  main28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/users/blue"#) -}
43cd63ca7ad8f0c601caa24f7df115ea
  main29 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3000#) -}
d6ba8b8eba8cbf1ae003051c81b44cf7
  main3 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main4) -}
b66607e97dee4b19c71f5c574f411755
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main31) -}
232a2a7f42b8a07c7614151505bca7b9
  main31 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Starting server..."#) -}
23ff01d8ed7fbb7ede00e460e027f499
  main32 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
97604623c877a78c9cce85838671deb2
  main4 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.CString.unpackFoldrCString#
                        @ [GHC.Types.Char]
                        Main.main6
                        Main.main5
                        (GHC.Types.[] @ GHC.Types.Char) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
aeaaa65bee86f82d5a5a94cadd186ed9
  main5 :: GHC.Types.Char -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>m2,
     Unfolding: (\ (x :: GHC.Types.Char)
                   (ys :: [GHC.Types.Char])[OneShot] ->
                 GHC.Types.: @ GHC.Types.Char (Data.Text.Internal.safe x) ys) -}
8cb691c63b537fb2387113d43fc16d84
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/hello"#) -}
e9d49d120ceeb84c642fead7f4e36859
  main7 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 Web.Scotty.Internal.Types.$w$c>>=
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   @ Data.Text.Internal.Lazy.Text
                   @ ()
                   Main.main9
                   Main.main8
                   w4) -}
6a66374382862e75f2382ff8427fd14c
  main8 ::
    Data.Text.Internal.Lazy.Text
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U> -}
1221ba0ffde62817fd3e9b0bfee8708e
  main9 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text
      GHC.Types.IO
      Data.Text.Internal.Lazy.Text
  {- Unfolding: (Web.Scotty.Action.param
                   @ Data.Text.Internal.Lazy.Text
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Action.$fParsableText0
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   GHC.Base.$fMonadIO
                   Main.main10) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  name :: Main.User -> GHC.Base.String
  RecSel Left Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.User) ->
                 case ds of wild { Main.User ds1 ds2 ds3 -> ds2 }) -}
b037825550a4804c4b5e6f26fc67a6c0
  paramRoute :: Web.Scotty.ActionM ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main7
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <Web.Scotty.Internal.Types.ActionEnv>_R
                          <Control.Monad.Trans.State.Lazy.StateT
                             Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                          <Data.Either.Either
                             (Web.Scotty.Internal.Types.ActionError
                                Data.Text.Internal.Lazy.Text)
                             ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                <Web.Scotty.Internal.Types.ActionError
                                                   Data.Text.Internal.Lazy.Text>_N
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   Web.Scotty.Internal.Types.ActionEnv
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Web.Scotty.Internal.Types.ScottyResponse
                                                      GHC.Types.IO)>_R
                                                <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                   <Data.Text.Internal.Lazy.Text>_N
                                                                   <GHC.Types.IO>_R) <()>_N)) -}
16ea0201343710ea30339516031140fc
  routes :: Web.Scotty.ScottyM ()
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                ((<Web.Scotty.Internal.Types.ScottyState
                     Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                  ->_R Nth:3
                           (<Web.Scotty.Internal.Types.ScottyState
                               Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                            ->_R Nth:3
                                     (<Web.Scotty.Internal.Types.ScottyState
                                         Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                    <((),
                                                      Web.Scotty.Internal.Types.ScottyState
                                                        Data.Text.Internal.Lazy.Text
                                                        GHC.Types.IO)>_R)))) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                                         <Web.Scotty.Internal.Types.ScottyState
                                                                                            Data.Text.Internal.Lazy.Text
                                                                                            GHC.Types.IO>_N
                                                                                         <Data.Functor.Identity.Identity>_R
                                                                                         <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                                                                            <Data.Text.Internal.Lazy.Text>_N
                                                                                                            <GHC.Types.IO>_N) <()>_N)) -}
be93f5f09bc6f6bcee0bd62b77909bc8
  userId :: Main.User -> GHC.Types.Int
  RecSel Left Main.User
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.User) ->
                 case ds of wild { Main.User ds1 ds2 ds3 -> ds1 }) -}
1fb4a585c1719bd6624a58dfdc2de0ed
  userRoute :: Web.Scotty.ActionM ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main17
                  `cast`
                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <Web.Scotty.Internal.Types.ActionEnv>_R
                          <Control.Monad.Trans.State.Lazy.StateT
                             Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                          <Data.Either.Either
                             (Web.Scotty.Internal.Types.ActionError
                                Data.Text.Internal.Lazy.Text)
                             ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                <Web.Scotty.Internal.Types.ActionError
                                                   Data.Text.Internal.Lazy.Text>_N
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   Web.Scotty.Internal.Types.ActionEnv
                                                   (Control.Monad.Trans.State.Lazy.StateT
                                                      Web.Scotty.Internal.Types.ScottyResponse
                                                      GHC.Types.IO)>_R
                                                <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                   <Data.Text.Internal.Lazy.Text>_N
                                                                   <GHC.Types.IO>_R) <()>_N)) -}
1d694914db9ef7f1b010e4d67cb63c67
  usersRoute :: Web.Scotty.ActionM ()
  {- Unfolding: (Web.Scotty.Action.$wjson
                   @ [Main.User]
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Main.$s$fToJSON[]
                   GHC.Base.$fMonadIO
                   Main.allUsers) -}
instance Data.Aeson.Types.FromJSON.FromJSON [Main.Color]
  = Main.$fFromJSONColor
instance Data.Aeson.Types.FromJSON.FromJSON [Main.User]
  = Main.$fFromJSONUser
instance GHC.Generics.Generic [Main.Color] = Main.$fGenericColor
instance GHC.Generics.Generic [Main.User] = Main.$fGenericUser
instance GHC.Show.Show [Main.Color] = Main.$fShowColor
instance GHC.Show.Show [Main.User] = Main.$fShowUser
instance Data.Aeson.Types.ToJSON.ToJSON [Main.Color]
  = Main.$fToJSONColor
instance Data.Aeson.Types.ToJSON.ToJSON [Main.User]
  = Main.$fToJSONUser
family instance GHC.Generics.Rep [Main.User] = Main.Rep_User
family instance GHC.Generics.Rep [Main.Color] = Main.Rep_Color
"SPEC/Main $fConstructorMetaMetaCons @ "Blue" @ 'PrefixI @ 'False" [orphan] forall (v2 :: GHC.Generics.SingI
                                                                                            'GHC.Types.False)
                                                                                   (v1 :: GHC.Generics.SingI
                                                                                            'GHC.Generics.PrefixI)
                                                                                   (v :: GHC.TypeLits.KnownSymbol
                                                                                           "Blue")
  GHC.Generics.$fConstructorMetaMetaCons @ "Blue"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         v
                                         v1
                                         v2
  = Main.$fFromJSONColor_$s$fConstructorMetaMetaCons
"SPEC/Main $fConstructorMetaMetaCons @ "Green" @ 'PrefixI @ 'False" [orphan] forall (v2 :: GHC.Generics.SingI
                                                                                             'GHC.Types.False)
                                                                                    (v1 :: GHC.Generics.SingI
                                                                                             'GHC.Generics.PrefixI)
                                                                                    (v :: GHC.TypeLits.KnownSymbol
                                                                                            "Green")
  GHC.Generics.$fConstructorMetaMetaCons @ "Green"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         v
                                         v1
                                         v2
  = Main.$fFromJSONColor_$s$fConstructorMetaMetaCons1
"SPEC/Main $fConstructorMetaMetaCons @ "Red" @ 'PrefixI @ 'False" [orphan] forall (v2 :: GHC.Generics.SingI
                                                                                           'GHC.Types.False)
                                                                                  (v1 :: GHC.Generics.SingI
                                                                                           'GHC.Generics.PrefixI)
                                                                                  (v :: GHC.TypeLits.KnownSymbol
                                                                                          "Red")
  GHC.Generics.$fConstructorMetaMetaCons @ "Red"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         v
                                         v1
                                         v2
  = Main.$fFromJSONColor_$s$fConstructorMetaMetaCons2
"SPEC/Main $fFromJSON[] @ Char" [orphan] forall (v :: Data.Aeson.Types.FromJSON.FromJSON
                                                        GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char v
  = Main.$fFromJSONUser_$s$fFromJSON[]
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "color") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                               'GHC.Generics.DecidedLazy)
                                                                                                                                                                      (v2 :: GHC.Generics.SingI
                                                                                                                                                                               'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                      (v1 :: GHC.Generics.SingI
                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                      (v :: GHC.Generics.SingI
                                                                                                                                                                              ('GHC.Maybe.Just
                                                                                                                                                                                 "color"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "color")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "name") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                     (v2 :: GHC.Generics.SingI
                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                     (v1 :: GHC.Generics.SingI
                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                     (v :: GHC.Generics.SingI
                                                                                                                                                                             ('GHC.Maybe.Just
                                                                                                                                                                                "name"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "name")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel1
"SPEC/Main $fSelectorMetaMetaSel @ ('Just
                                     "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [orphan] forall (v3 :: GHC.Generics.SingI
                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                       (v2 :: GHC.Generics.SingI
                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                       (v1 :: GHC.Generics.SingI
                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                       (v :: GHC.Generics.SingI
                                                                                                                                                                               ('GHC.Maybe.Just
                                                                                                                                                                                  "userId"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Maybe.Just "userId")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     v
                                     v1
                                     v2
                                     v3
  = Main.$fFromJSONUser_$s$fSelectorMetaMetaSel2
"SPEC/Main $fToJSON[] @ User" forall (v :: Data.Aeson.Types.ToJSON.ToJSON
                                             Main.User)
  Data.Aeson.Types.ToJSON.$fToJSON[] @ Main.User v
  = Main.$s$fToJSON[]
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

